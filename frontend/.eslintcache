[{"/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/index.js":"1","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/App.js":"2","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/pages/Playground.js":"3","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/pages/Dancebase.js":"4","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/pages/Progress.js":"5","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/pages/Developer.js":"6","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/Sidebar/Sidebar.js":"7","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/BasicTable/BasicTable.js":"8","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/DancerCard/DancerCard.js":"9","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/RadioButtonsGroup/RadioButtonsGroup.js":"10","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/Button/StartButton.js":"11","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/VideoCarousel/VideoCarousel.js":"12","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/MediaCard/MediaCard.js":"13","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/OutlinedCard/OutlinedCard.js":"14","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/SearchBar/SearchBar.js":"15","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/Sidebar/SidebarData.js":"16","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/SimpleCard/SimpleCard.js":"17","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/PieChart/PieChart.js":"18","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/LineChart/LineChart.js":"19","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/CircularProgressWithLabel/CircularProgressWithLabel.js":"20","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/VideoCarousel/Item.js":"21","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/BarChart/BarChart.js":"22","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/pages/Authenticate.js":"23","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/InputAdornments/InputAdornments.js":"24"},{"size":215,"mtime":1612534896684,"results":"25","hashOfConfig":"26"},{"size":1362,"mtime":1614097561183,"results":"27","hashOfConfig":"26"},{"size":5344,"mtime":1614063404552,"results":"28","hashOfConfig":"26"},{"size":568,"mtime":1614006261838,"results":"29","hashOfConfig":"26"},{"size":990,"mtime":1612757249920,"results":"30","hashOfConfig":"26"},{"size":17960,"mtime":1614082721394,"results":"31","hashOfConfig":"26"},{"size":1124,"mtime":1613792654865,"results":"32","hashOfConfig":"26"},{"size":2349,"mtime":1613802128072,"results":"33","hashOfConfig":"26"},{"size":1402,"mtime":1614039323754,"results":"34","hashOfConfig":"26"},{"size":1280,"mtime":1612800229086,"results":"35","hashOfConfig":"26"},{"size":573,"mtime":1612845180559,"results":"36","hashOfConfig":"26"},{"size":5509,"mtime":1614006246845,"results":"37","hashOfConfig":"26"},{"size":1644,"mtime":1613442650902,"results":"38","hashOfConfig":"26"},{"size":1088,"mtime":1612757202142,"results":"39","hashOfConfig":"26"},{"size":2717,"mtime":1613298989483,"results":"40","hashOfConfig":"26"},{"size":812,"mtime":1613792679817,"results":"41","hashOfConfig":"26"},{"size":1279,"mtime":1613292412201,"results":"42","hashOfConfig":"26"},{"size":951,"mtime":1612762404458,"results":"43","hashOfConfig":"26"},{"size":2929,"mtime":1612762326810,"results":"44","hashOfConfig":"26"},{"size":1362,"mtime":1613797732387,"results":"45","hashOfConfig":"26"},{"size":248,"mtime":1612668085315,"results":"46","hashOfConfig":"26"},{"size":2530,"mtime":1614006194806,"results":"47","hashOfConfig":"26"},{"size":596,"mtime":1614097069921,"results":"48","hashOfConfig":"26"},{"size":3568,"mtime":1614097322028,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1kb4at2",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"52"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/index.js",[],["113","114"],"/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/App.js",[],"/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/pages/Playground.js",["115","116","117","118","119","120","121","122","123","124","125","126","127","128"],"import React from 'react'\nimport DancerCard from '../components/DancerCard/DancerCard'\nimport { Grid, Typography } from '@material-ui/core'\nimport RadioButtonsGroup from '../components/RadioButtonsGroup/RadioButtonsGroup'\nimport StartButton from '../components/Button/StartButton'\nimport { motion, AnimateSharedLayout } from 'framer-motion'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FlipMove from 'react-flip-move'\nimport { useEffect, useState } from 'react'\nimport io from 'socket.io-client'\nimport Button from '@material-ui/core/Button'\nimport BasicTable from '../components/BasicTable/BasicTable'\n\nimport classNames from 'classnames'\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n    paddingRight: 33,\n  },\n}))\n\nconst socket = io('http://localhost:3000', {\n  transports: ['websocket', 'polling'],\n})\n\nfunction Playground() {\n  const classes = useStyles()\n  const [danceMove, setDanceMove] = useState('Dab')\n  const [position, setPosition] = useState([1, 2, 3])\n  // const [testLog, setTestLog] = useState({\n  //   danceMove: 'Dab',\n  //   position1: 1,\n  //   position2: 2,\n  //   position3: 3,\n  // })\n  const [correctness, setCorrectness] = useState(false)\n  // const [p1Position, setP1Position] = useState(1)\n  // const [p2Position, setP2Position] = useState(2)\n  // const [p3Position, setP3Position] = useState(3)\n\n  // const [p1DanceMove, setP1DanceMove] = useState('')\n  // const [p2DanceMove, setP2DanceMove] = useState('')\n  // const [p3DanceMove, setP3DanceMove] = useState('')\n  const [connection, setConnection] = useState(false)\n\n  const handleConnection = () => {\n    connection ? setConnection(false) : setConnection(true)\n  }\n  let [position1, position2, position3] = position\n  let currentDanceMove = danceMove\n  useEffect(() => {\n    if (connection) {\n      socket.on('new_data', (newData) => {\n        setDanceMove(newData.danceMove)\n        setPosition(newData.position)\n      })\n      // socket.on('test_log', (newData) => {\n      //   setTestLog(newData)\n      // })\n\n      // socket.on('new_data', (newData) => {\n      //   setDanceMove(newData.danceMove)\n      //   setPosition(newData.position)\n      // })\n      // socket.on('new_data', (newData) => {\n      //   setDanceMove(newData.danceMove)\n      //   setPosition(newData.position)\n      // })\n    } else {\n      socket.off('new_data')\n    }\n  }, [connection])\n\n  // useEffect(() => {\n  //   if (\n  //     position1 === testLog.position1 &&\n  //     position2 === testLog.position2 &&\n  //     position3 === testLog.position3 &&\n  //     currentDanceMove === testLog.danceMove\n  //   ) {\n  //     setCorrectness(true)\n  //   } else {\n  //     setCorrectness(false)\n  //   }\n  // })\n  // console.log(position1)\n  // console.log(position2)\n  // console.log(position3)\n  // console.log(testLog.position1)\n  // console.log(testLog.position2)\n  // console.log(testLog.position3)\n  // console.log(currentDanceMove)\n  // console.log(testLog.danceMove)\n  // console.log(correctness)\n\n  return (\n    <>\n      <Grid container justify='center'>\n        <Grid item>\n          <DancerCard\n            name='Paula'\n            position={position[0]}\n            userImage='6CgkUjUl4og'\n            danceMove={danceMove}\n          />\n        </Grid>\n\n        <Grid item>\n          <DancerCard\n            name='Robinson'\n            position={position[1]}\n            userImage='sibVwORYqs0'\n            danceMove={danceMove}\n          />\n        </Grid>\n\n        <Grid item>\n          <DancerCard\n            name='Erik'\n            position={position[2]}\n            userImage='d2MSDujJl2g'\n            danceMove={danceMove}\n          />\n        </Grid>\n\n        {/* <AnimateSharedLayout>\n          <motion.div\n            drag\n            dragElastic={0.2}\n            dragMomentum={false}\n            layout\n            layoutId\n            className={classes.player1}\n          >\n            <DancerCard name='Jack' status='Ready' />\n          </motion.div>\n\n          <motion.div\n            drag\n            dragElastic={0.2}\n            dragMomentum={false}\n            layout\n            layoutId\n            className={classes.player2}\n          >\n            <DancerCard name='Chris' status='Ready' />\n          </motion.div>\n\n          <motion.div\n            drag\n            dragElastic={0.2}\n            dragMomentum={false}\n            layout\n            layoutId\n            className={classes.player3}\n          >\n            <DancerCard name='Vincent' status='' />\n          </motion.div>\n        </AnimateSharedLayout> */}\n\n        {/* <Typography variant='h3'>Test Log Received</Typography>\n\n        <Grid item style={{ justifyItems: 'center' }}>\n          <BasicTable\n            danceMove={testLog.danceMove}\n            position1={testLog.position1}\n            position2={testLog.position2}\n            position3={testLog.position3}\n            correctness={correctness}\n          />\n        </Grid> */}\n      </Grid>\n\n      <Grid container justify='center'>\n        <Grid item>\n          <Button\n            variant='contained'\n            color='secondary'\n            onClick={handleConnection}\n            className={classes.margin}\n          >\n            {connection ? <p>END</p> : <p>START</p>}\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default Playground\n","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/pages/Dancebase.js",["129","130","131"],"import React from 'react'\nimport { Grid, makeStyles, Typography } from '@material-ui/core'\nimport MediaCard from '../components/MediaCard/MediaCard'\nimport SearchBar from '../components/SearchBar/SearchBar'\nimport VideoCarousel from '../components/VideoCarousel/VideoCarousel'\n\nfunction Dancebase() {\n  return (\n    <Grid container justify='center'>\n      <Grid item xs={12}>\n        <Typography variant='h3' align='center'>\n          {' '}\n          Dance Base\n        </Typography>\n        <VideoCarousel />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default Dancebase\n","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/pages/Progress.js",["132","133"],"import React from 'react'\nimport { Card, Typography, Grid } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport PieChart from '../components/PieChart/PieChart'\nimport OutlinedCard from '../components/OutlinedCard/OutlinedCard'\nimport LineChart from '../components/LineChart/LineChart'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    marginTop: 120,\n  },\n})\n\nfunction Progress() {\n  const classes = useStyles()\n  return (\n    <>\n      <Grid container direction='column'>\n        <Grid container item>\n          <Grid item xs={6}>\n            <PieChart />\n          </Grid>\n\n          <Grid item xs={6} className={classes.root}>\n            <OutlinedCard title='Total Games' count='12' />\n            <OutlinedCard title='Total Dance Moves' count='111' />\n          </Grid>\n        </Grid>\n        <Grid item>\n          <LineChart />\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default Progress\n","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/pages/Developer.js",["134","135","136","137","138"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport { Grid } from '@material-ui/core'\n\nimport io from 'socket.io-client'\nimport { useEffect, useState } from 'react'\nimport {\n  BarChart,\n  Bar,\n  Line,\n  LineChart,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  Legend,\n} from 'recharts'\nimport Button from '@material-ui/core/Button'\nimport SimpleCard from '../components/SimpleCard/SimpleCard'\nimport BasicTable from '../components/BasicTable/BasicTable'\n\nconst socket = io('http://localhost:3000', {\n  transports: ['websocket', 'polling'],\n})\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  )\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  margin: {\n    margin: theme.spacing(1),\n    paddingRight: 33,\n  },\n}))\n\nexport default function Developer() {\n  const classes = useStyles()\n  const [value, setValue] = React.useState(0)\n\n  const [p1LeftAData, setP1LeftAData] = useState([])\n  const [data, setData] = useState([])\n  // const [p1LeftGData, setP1LeftGData] = useState([])\n  // const [p1RightAData, setP1RightAData] = useState([])\n  // const [p1RightGData, setP1RightGData] = useState([])\n\n  // const [p2LeftAData, setP2LeftAData] = useState([])\n  // const [p2LeftGData, setP2LeftGData] = useState([])\n  // const [p2RightAData, setP2RightAData] = useState([])\n  // const [p2RightGData, setP2RightGData] = useState([])\n\n  // const [p3LeftAData, setP3LeftAData] = useState([])\n  // const [p3LeftGData, setP3LeftGData] = useState([])\n  // const [p3RightAData, setP3RightAData] = useState([])\n  // const [p3RightGData, setP3RightGData] = useState([])\n  const [danceMove, setDanceMove] = useState('Dab')\n  // const [p1DanceMove, setP1DanceMove] = useState('Neutral')\n  // const [p2DanceMove, setP2DanceMove] = useState('Neutral')\n  // const [p3DanceMove, setP3DanceMove] = useState('Neutral')\n\n  const [position, setPosition] = useState([1, 2, 3])\n  // const [p1Position, setP1Position] = useState(1)\n  // const [p2Position, setP2Position] = useState(2)\n  // const [p3Position, setP3Position] = useState(3)\n\n  const [connection, setConnection] = useState(false)\n  // const [termination, setTermination] = useState(false)\n  // const [connection, setConnection] = useState(0)\n  const handleConnection = () => {\n    connection ? setConnection(false) : setConnection(true)\n  }\n\n  // const handleTermination = () => {\n  //   termination ? setTermination(false) : setTermination(true)\n  // }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  const [testLog, setTestLog] = useState({\n    danceMove: 'Dab',\n    position1: 1,\n    position2: 2,\n    position3: 3,\n  })\n  const [correctness, setCorrectness] = useState(false)\n\n  let [position1, position2, position3] = position\n  let currentDanceMove = danceMove\n\n  useEffect(() => {\n    if (connection) {\n      socket.on('new_data', (newData) => {\n        setData((currentData) => [...currentData, newData])\n        setPosition(newData.position)\n        setDanceMove(newData.danceMove)\n        // setP1DanceMove(newData.danceMove)\n        // setP1Position(newData.position)\n      })\n\n      socket.on('test_log', (newData) => {\n        setTestLog(newData)\n      })\n\n      // socket.on('p1LeftG', (newData) => {\n      //   setP1LeftGData((currentData) => [...currentData, newData])\n      // })\n\n      // socket.on('p1RightA', (newData) => {\n      //   setP1RightAData((currentData) => [...currentData, newData])\n      // })\n      // socket.on('p1RightG', (newData) => {\n      //   setP1RightGData((currentData) => [...currentData, newData])\n      // })\n\n      // socket.on('p2LeftA', (newData) => {\n      //   setP2Position(newData.position)\n      //   setP2DanceMove(newData.danceMove)\n      //   setP2LeftAData((currentData) => [...currentData, newData])\n      // })\n      // socket.on('p2LeftG', (newData) => {\n      //   setP2LeftGData((currentData) => [...currentData, newData])\n      // })\n\n      // socket.on('p2RightA', (newData) => {\n      //   setP2RightAData((currentData) => [...currentData, newData])\n      // })\n      // socket.on('p2RightG', (newData) => {\n      //   setP2RightGData((currentData) => [...currentData, newData])\n      // })\n\n      // socket.on('p3LeftA', (newData) => {\n      //   setP3Position(newData.position)\n      //   setP3DanceMove(newData.danceMove)\n      //   setP3LeftAData((currentData) => [...currentData, newData])\n      // })\n      // socket.on('p3LeftG', (newData) => {\n      //   setP3LeftGData((currentData) => [...currentData, newData])\n      // })\n\n      // socket.on('p3RightA', (newData) => {\n      //   setP3RightAData((currentData) => [...currentData, newData])\n      // })\n      // socket.on('p3RightG', (newData) => {\n      //   setP3RightGData((currentData) => [...currentData, newData])\n      // })\n    } else {\n      // socket.emit('end')\n      socket.off('new_data')\n      // socket.off('p1LeftG')\n      // socket.off('p1RightA')\n      // socket.off('p1RightG')\n      // socket.off('p2LeftA')\n      // socket.off('p2LeftG')\n      // socket.off('p2RightA')\n      // socket.off('p2RightG')\n      // socket.off('p3LeftA')\n      // socket.off('p3LeftG')\n      // socket.off('p3RightA')\n      // socket.off('p3RightG')\n      // socket.disconnect()\n      // socket.close('p1LeftA')\n      // socket.close('p1LeftG')\n      // socket.close('p1RightA')\n      // socket.close('p1RightG')\n      // socket.close('p2LeftA')\n      // socket.close('p2LeftG')\n      // socket.close('p2RightA')\n      // socket.close('p2RightG')\n      // socket.close('p3LeftA')\n      // socket.close('p3LeftG')\n      // socket.close('p3RightA')\n      // socket.close('p3RightG')\n    }\n  }, [connection])\n\n  useEffect(() => {\n    if (\n      position1 === testLog.position1 &&\n      position2 === testLog.position2 &&\n      position3 === testLog.position3 &&\n      currentDanceMove === testLog.danceMove\n    ) {\n      setCorrectness(true)\n    } else {\n      setCorrectness(false)\n    }\n  })\n\n  console.log(correctness)\n  return (\n    <>\n      <div className={classes.root}>\n        <AppBar position='static' color='default'>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor='primary'\n            textColor='primary'\n            variant='scrollable'\n            scrollButtons='auto'\n            aria-label='scrollable auto tabs example'\n          >\n            <Tab label='Player 1' {...a11yProps(0)} />\n            <Tab label='Player 2' {...a11yProps(1)} />\n            <Tab label='Player 3' {...a11yProps(2)} />\n            <Tab label='Offline Analytics' {...a11yProps(3)} />\n            {/* <Tab label='Dance Move' {...a11yProps(4)} /> */}\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          <>\n            <Grid container justify='space-around'>\n              <Grid item>\n                <div>\n                  <h1>(Left) MPU </h1>\n                  <LineChart width={500} height={300} data={data}>\n                    <CartesianGrid strokeDasharray='3 3' />\n                    <Tooltip />\n                    <Legend />\n                    <XAxis dataKey='time' />\n                    <YAxis />\n\n                    <Line type='monotone' dataKey='xAxis' stroke='#820000' />\n                    <Line type='monotone' dataKey='yAxis' stroke='#118200' />\n                    <Line type='monotone' dataKey='zAxis' stroke='#000982' />\n                  </LineChart>\n                  <LineChart width={500} height={300} data={data}>\n                    <CartesianGrid strokeDasharray='3 3' />\n                    <Tooltip />\n                    <Legend />\n                    <XAxis dataKey='time' />\n                    <YAxis />\n                    <Line type='monotone' dataKey='xAxis' stroke='#820000' />\n                    <Line type='monotone' dataKey='yAxis' stroke='#118200' />\n                    <Line type='monotone' dataKey='zAxis' stroke='#000982' />\n                  </LineChart>\n                </div>\n              </Grid>\n              <Grid item>\n                <div>\n                  <h1>(Right) MPU </h1>\n                  <LineChart width={500} height={300} data={data}>\n                    <CartesianGrid strokeDasharray='3 3' />\n                    <Tooltip />\n                    <Legend />\n                    <XAxis dataKey='time' />\n                    <YAxis />\n\n                    <Line type='monotone' dataKey='xAxis' stroke='#820000' />\n                    <Line type='monotone' dataKey='yAxis' stroke='#118200' />\n                    <Line type='monotone' dataKey='zAxis' stroke='#000982' />\n                  </LineChart>\n                  <LineChart width={500} height={300} data={data}>\n                    <CartesianGrid strokeDasharray='3 3' />\n                    <Tooltip />\n                    <Legend />\n                    <XAxis dataKey='time' />\n                    <YAxis />\n                    <Line type='monotone' dataKey='xAxis' stroke='#820000' />\n                    <Line type='monotone' dataKey='yAxis' stroke='#118200' />\n                    <Line type='monotone' dataKey='zAxis' stroke='#000982' />\n                  </LineChart>\n                </div>\n              </Grid>\n            </Grid>\n          </>\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <>\n            <Grid container justify='space-around'>\n              <Grid item>\n                <div>\n                  <h1>(Left) MPU </h1>\n                  <LineChart width={500} height={300} data={data}>\n                    <CartesianGrid strokeDasharray='3 3' />\n                    <Tooltip />\n                    <Legend />\n                    <XAxis dataKey='time' />\n                    <YAxis />\n\n                    <Line type='monotone' dataKey='xAxis' stroke='#820000' />\n                    <Line type='monotone' dataKey='yAxis' stroke='#118200' />\n                    <Line type='monotone' dataKey='zAxis' stroke='#000982' />\n                  </LineChart>\n                  <LineChart width={500} height={300} data={data}>\n                    <CartesianGrid strokeDasharray='3 3' />\n                    <Tooltip />\n                    <Legend />\n                    <XAxis dataKey='time' />\n                    <YAxis />\n                    <Line type='monotone' dataKey='xAxis' stroke='#820000' />\n                    <Line type='monotone' dataKey='yAxis' stroke='#118200' />\n                    <Line type='monotone' dataKey='zAxis' stroke='#000982' />\n                  </LineChart>\n                </div>\n              </Grid>\n              <Grid item>\n                <div>\n                  <h1>(Right) MPU </h1>\n                  <LineChart width={500} height={300} data={data}>\n                    <CartesianGrid strokeDasharray='3 3' />\n                    <Tooltip />\n                    <Legend />\n                    <XAxis dataKey='time' />\n                    <YAxis />\n\n                    <Line type='monotone' dataKey='xAxis' stroke='#820000' />\n                    <Line type='monotone' dataKey='yAxis' stroke='#118200' />\n                    <Line type='monotone' dataKey='zAxis' stroke='#000982' />\n                  </LineChart>\n                  <LineChart width={500} height={300} data={data}>\n                    <CartesianGrid strokeDasharray='3 3' />\n                    <Tooltip />\n                    <Legend />\n                    <XAxis dataKey='time' />\n                    <YAxis />\n                    <Line type='monotone' dataKey='xAxis' stroke='#820000' />\n                    <Line type='monotone' dataKey='yAxis' stroke='#118200' />\n                    <Line type='monotone' dataKey='zAxis' stroke='#000982' />\n                  </LineChart>\n                </div>\n              </Grid>\n            </Grid>\n          </>\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <>\n            <Grid container justify='space-around'>\n              <Grid item>\n                <div>\n                  <h1>(Left) MPU </h1>\n                  <LineChart width={500} height={300} data={data}>\n                    <CartesianGrid strokeDasharray='3 3' />\n                    <Tooltip />\n                    <Legend />\n                    <XAxis dataKey='time' />\n                    <YAxis />\n\n                    <Line type='monotone' dataKey='xAxis' stroke='#820000' />\n                    <Line type='monotone' dataKey='yAxis' stroke='#118200' />\n                    <Line type='monotone' dataKey='zAxis' stroke='#000982' />\n                  </LineChart>\n                  <LineChart width={500} height={300} data={data}>\n                    <CartesianGrid strokeDasharray='3 3' />\n                    <Tooltip />\n                    <Legend />\n                    <XAxis dataKey='time' />\n                    <YAxis />\n                    <Line type='monotone' dataKey='xAxis' stroke='#820000' />\n                    <Line type='monotone' dataKey='yAxis' stroke='#118200' />\n                    <Line type='monotone' dataKey='zAxis' stroke='#000982' />\n                  </LineChart>\n                </div>\n              </Grid>\n              <Grid item>\n                <div>\n                  <h1>(Right) MPU </h1>\n                  <LineChart width={500} height={300} data={data}>\n                    <CartesianGrid strokeDasharray='3 3' />\n                    <Tooltip />\n                    <Legend />\n                    <XAxis dataKey='time' />\n                    <YAxis />\n\n                    <Line type='monotone' dataKey='xAxis' stroke='#820000' />\n                    <Line type='monotone' dataKey='yAxis' stroke='#118200' />\n                    <Line type='monotone' dataKey='zAxis' stroke='#000982' />\n                  </LineChart>\n                  <LineChart width={500} height={300} data={data}>\n                    <CartesianGrid strokeDasharray='3 3' />\n                    <Tooltip />\n                    <Legend />\n                    <XAxis dataKey='time' />\n                    <YAxis />\n                    <Line type='monotone' dataKey='xAxis' stroke='#820000' />\n                    <Line type='monotone' dataKey='yAxis' stroke='#118200' />\n                    <Line type='monotone' dataKey='zAxis' stroke='#000982' />\n                  </LineChart>\n                </div>\n              </Grid>\n            </Grid>\n          </>\n        </TabPanel>\n        <TabPanel value={value} index={3}>\n          <Typography variant='h3'>Test Log Received</Typography>\n\n          <Grid item style={{ justifyItems: 'center' }}>\n            <BasicTable\n              danceMove={testLog.danceMove}\n              position1={testLog.position1}\n              position2={testLog.position2}\n              position3={testLog.position3}\n              correctness={correctness}\n            />\n          </Grid>\n\n          <Grid container justify='center' style={{ marginTop: '100px' }}>\n            <Grid item style={{ marginBottom: '25px' }}>\n              <Typography variant='h3'>Simulated Data</Typography>\n            </Grid>\n\n            <Grid container item justify='center'>\n              <Grid item>\n                <SimpleCard player='Paula' danceMove={danceMove} />\n              </Grid>\n              <Grid item>\n                <SimpleCard player='Cristian' danceMove={danceMove} />\n              </Grid>\n              <Grid item>\n                <SimpleCard player='Claudia' danceMove={danceMove} />\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid container style={{ marginTop: '10px' }}>\n            <Grid container item justify='center'>\n              <Grid item>\n                <SimpleCard player='' position={position[0]} />\n              </Grid>\n              <Grid item>\n                <SimpleCard player='' position={position[1]} />\n              </Grid>\n              <Grid item>\n                <SimpleCard player='' position={position[2]} />\n              </Grid>\n            </Grid>\n          </Grid>\n        </TabPanel>\n        <TabPanel value={value} index={4}>\n          {/* <Grid container style={{ marginTop: '200px' }}>\n            <Grid container item justify='center'>\n              <Grid item>\n                <SimpleCard player='Player 1' danceMove={danceMove} />\n              </Grid>\n              <Grid item>\n                <SimpleCard player='Player 2' danceMove={danceMove} />\n              </Grid>\n              <Grid item>\n                <SimpleCard player='Player 3' danceMove={danceMove} />\n              </Grid>\n            </Grid>\n          </Grid> */}\n        </TabPanel>\n        <TabPanel value={value} index={5}>\n          Item Six\n        </TabPanel>\n        <TabPanel value={value} index={6}>\n          Item Seven\n        </TabPanel>\n      </div>\n      <Grid container justify='center'>\n        <Button\n          variant='contained'\n          color='secondary'\n          onClick={handleConnection}\n          className={classes.margin}\n        >\n          {connection ? <p>DISCONNECT</p> : <p>CONNECT</p>}\n        </Button>\n      </Grid>\n    </>\n  )\n}\n","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/Sidebar/Sidebar.js",["139","140"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { SidebarData } from './SidebarData'\nimport './Sidebar.css'\nimport { IconContext } from 'react-icons'\nimport logo from '../../images/logo_transparent.png'\nimport { Button } from '@material-ui/core'\nimport classNames from 'classnames'\n\nfunction Sidebar() {\n  // let multiClasses = classNames({\n  //   ''\n  // })\n  return (\n    <>\n      <IconContext.Provider value={{ color: '#fff' }}>\n        <nav className='sidebar-menu'>\n          <ul className='sidebar-menu-items'>\n            <li className='sidebar-logo'>\n              <Link to='/'>\n                <img className='logo' src={logo} alt='' />\n              </Link>\n            </li>\n\n            {SidebarData.map((item, index) => {\n              return (\n                <li key={index} className={item.className}>\n                  <Link to={item.path}>{item.icon}</Link>\n                  <span class='tooltiptext'>{item.toolTipText}</span>\n                </li>\n              )\n            })}\n          </ul>\n        </nav>\n      </IconContext.Provider>\n    </>\n  )\n}\n\nexport default Sidebar\n","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/BasicTable/BasicTable.js",["141","142"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport greenTick from '../../images/animation_200_klda5n4f.gif'\nimport redCross from '../../images/animation_200_kldactqd.gif'\nimport { Typography } from '@material-ui/core'\nconst useStyles = makeStyles({\n  table: {\n    width: '85vw',\n  },\n})\n\n// function createData(danceMove, position1, position2, position3) {\n//   return { danceMove, position1, position2, position3 }\n// }\n\n// const rows = [createData('Frozen yoghurt', 159, 6.0, 24)]\n\nexport default function BasicTable(props) {\n  const classes = useStyles()\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label='simple table'>\n        <TableHead>\n          <TableRow>\n            <TableCell align='center'>Dance Move</TableCell>\n            <TableCell align='center'>Paula's Position</TableCell>\n            <TableCell align='center'>Cristian's Position</TableCell>\n            <TableCell align='center'>Claudia's Position</TableCell>\n            <TableCell align='center'>Matching Status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {/* {rows.map((row) => ( */}\n          <TableRow>\n            <TableCell align='center' component='th' scope='row'>\n              {props.danceMove}\n            </TableCell>\n            <TableCell align='center'>{props.position1}</TableCell>\n            <TableCell align='center'>{props.position2}</TableCell>\n            <TableCell align='center'>{props.position3}</TableCell>\n            <TableCell align='center'>\n              <Typography\n                style={{\n                  backgroundColor: props.correctness ? 'green' : 'red',\n                  color: 'white',\n                }}\n              >\n                {props.correctness ? 'Matched!' : 'Not matched!'}\n              </Typography>\n            </TableCell>\n          </TableRow>\n          {/* ))} */}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/DancerCard/DancerCard.js",["143"],"import React from 'react'\nimport './DancerCard.css'\nimport { Grid } from '@material-ui/core'\n\nfunction DancerCard(props) {\n  return (\n    <>\n      <div className='card'>\n        <Grid\n          style={{\n            width: '180px',\n            height: '100px',\n            position: 'relative',\n            left: '65px',\n          }}\n          className='card-image'\n          style={{\n            // background: `url(${props.userImage})`,\n            background: `url(https://source.unsplash.com/${props.userImage}/640x426)`,\n            backgroundSize: 'cover',\n          }}\n        >\n          {/* {' '}\n          <img className='card-image' src={props.userImage} alt='' /> */}\n        </Grid>\n\n        <div className='card-text'>\n          <h2>{props.name}</h2>\n          <div className='card-dance-name'>{props.danceMove}</div>\n        </div>\n        <div className='card-stats'>\n          <div className='stat'>\n            <div className='value'>100%</div>\n            <div className='type'>Accuracy</div>\n          </div>\n          <div className='stat border'>\n            <div className='value'>{props.position}</div>\n            <div className='type'>Position</div>\n          </div>\n          <div className='stat'>\n            <div className='value'>57%</div>\n            <div className='type'>Sync</div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default DancerCard\n","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/RadioButtonsGroup/RadioButtonsGroup.js",[],"/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/Button/StartButton.js",[],"/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/VideoCarousel/VideoCarousel.js",[],"/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/MediaCard/MediaCard.js",["144","145"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { Box } from '@material-ui/core'\n\nimport ReactPlayer from 'react-player'\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    borderRadius: 25,\n    marginBottom: 100,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  media: {\n    height: 500,\n  },\n})\n\nexport default function MediaCard(props) {\n  const classes = useStyles()\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          component='iframe'\n          className={classes.media}\n          src='{props.videolink}'\n          title='Contemplative Reptile'\n        />\n\n        <CardContent>\n          <Typography gutterBottom variant='h5' component='h2'>\n            ElbowKick\n          </Typography>\n          <Typography variant='body2' color='textSecondary' component='p'>\n            This move involve coordination between your elbows and legs\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size='small' color='primary'>\n          Share\n        </Button>\n        <Button size='small' color='primary'>\n          Learn More\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/OutlinedCard/OutlinedCard.js",["146","147"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles({\n  root: {\n    width: 300,\n    height: 150,\n    marginRight: 120,\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginTop: 25,\n  },\n})\n\nexport default function OutlinedCard(props) {\n  const classes = useStyles()\n\n  return (\n    <Card className={classes.root} variant='outlined'>\n      <CardContent>\n        <Typography\n          className={classes.title}\n          color='textSecondary'\n          gutterBottom\n          align='center'\n        >\n          {props.title}\n        </Typography>\n\n        <Typography\n          className={classes.pos}\n          color='Secondary'\n          variant='h5'\n          align='center'\n        >\n          {props.count}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/SearchBar/SearchBar.js",["148","149","150","151","152","153","154"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FaSearch } from 'react-icons/fa'\nimport SearchIcon from '@material-ui/icons/Search'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport { useState } from 'react'\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '10px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 1000,\n    marginBottom: 50,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n}))\n\n// export default function SearchBar() {\n//   const classes = useStyles()\n\n//   return (\n//     <Paper component='form' className={classes.root}>\n//       {/* <div style={{ width: 300 }}> */}\n//       <Autocomplete\n//         freeSolo\n//         id='free-solo-2-demo'\n//         disableClearable\n//         options={danceMoves.map((option) => option.name)}\n//         renderInput={(params) => (\n//           <TextField\n//             {...params}\n//             label='Search input'\n//             margin='normal'\n//             variant='outlined'\n//             InputProps={{ ...params.InputProps, type: 'search' }}\n//           />\n//         )}\n//       />\n//       {/* </div> */}\n//       <InputBase\n//         className={classes.input}\n//         placeholder='Search Moves...'\n//         inputProps={{ 'aria-label': 'Search Moves...' }}\n//       />\n//       <IconButton\n//         type='submit'\n//         className={classes.iconButton}\n//         aria-label='search'\n//       >\n//         <SearchIcon />\n//       </IconButton>\n//     </Paper>\n//   )\n// }\n\n// /* eslint-disable no-use-before-define */\n// import React from 'react'\n// import TextField from '@material-ui/core/TextField'\n// import Autocomplete from '@material-ui/lab/Autocomplete'\n\nexport default function SearchBar() {\n  return (\n    <div style={{ width: 300 }}>\n      <Autocomplete\n        freeSolo\n        id='free-solo-2-demo'\n        disableClearable\n        options={danceMoves.map((option) => option.name)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label='Search input'\n            margin='normal'\n            variant='outlined'\n            InputProps={{ ...params.InputProps, type: 'search' }}\n          />\n        )}\n      />\n    </div>\n  )\n}\n\nconst danceMoves = [\n  { name: 'Dab' },\n  { name: 'Elbow Kick' },\n  { name: 'Gun' },\n  { name: 'Hair' },\n  { name: 'Listen' },\n  { name: 'Point High' },\n  { name: 'Side Pump' },\n  { name: 'Wipe Table' },\n]\n","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/Sidebar/SidebarData.js",["155"],"import React from 'react'\nimport { FaPlayCircle } from 'react-icons/fa'\nimport { GiProgression, GiPodium } from 'react-icons/gi'\nimport { ImDatabase } from 'react-icons/im'\nimport { MdDeveloperBoard } from 'react-icons/md'\n\nexport const SidebarData = [\n  {\n    path: '/',\n    icon: <FaPlayCircle size='2x' />,\n    className: 'sidebar-icon tooltip ',\n    toolTipText: 'PlayGround',\n  },\n  {\n    path: '/dancebase',\n    icon: <ImDatabase size='2x' />,\n    className: 'sidebar-icon tooltip ',\n    toolTipText: 'Dance Base',\n  },\n  {\n    path: '/progress',\n    icon: <GiProgression size='2x' />,\n    className: 'sidebar-icon tooltip ',\n    toolTipText: 'Progress',\n  },\n  {\n    path: '/developer',\n    icon: <MdDeveloperBoard size='2x' />,\n    className: 'sidebar-icon tooltip ',\n    toolTipText: 'Dev Mode',\n  },\n]\n","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/SimpleCard/SimpleCard.js",["156","157","158"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 30,\n    textAlign: 'center',\n  },\n  pos: {\n    marginTop: 12,\n    fontSize: 50,\n    textAlign: 'center',\n  },\n})\n\nexport default function SimpleCard(props) {\n  const classes = useStyles()\n  const bull = <span className={classes.bullet}>•</span>\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} gutterBottom>\n          {props.player}\n        </Typography>\n        <Typography\n          color='textSecondary'\n          style={{ textAlign: 'center', fontSize: 50 }}\n        >\n          {props.danceMove}\n        </Typography>\n        <Typography className={classes.pos} color='textSecondary' gutterBottom>\n          {props.position}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/PieChart/PieChart.js",[],"/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/LineChart/LineChart.js",[],"/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/CircularProgressWithLabel/CircularProgressWithLabel.js",[],["159","160"],"/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/VideoCarousel/Item.js",[],"/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/BarChart/BarChart.js",["161"],"import React from 'react'\nimport { Bar, defaults } from 'react-chartjs-2'\nimport { FaBold } from 'react-icons/fa'\n\ndefaults.global.tooltips.enabled = false\n\nconst BarChart = (props) => {\n  return (\n    <div>\n      <Bar\n        data={{\n          labels: [\n            'Elbow Kick',\n            'Dab',\n            'Gun',\n            'Hair',\n            'Listen',\n            'Point High',\n            'Side Pump',\n            'Wipe Table',\n          ],\n          datasets: [\n            {\n              label: 'View count of all the dance move',\n              data: [\n                props.elbowKickCount,\n                props.dabCount,\n                props.gunCount,\n                props.hairCount,\n                props.listenCount,\n                props.pointHighCount,\n                props.sidePumpCount,\n                props.wipeTableCount,\n              ],\n              backgroundColor: [\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n                'rgba(255, 206, 86, 0.2)',\n                'rgba(75, 192, 192, 0.2)',\n                'rgba(153, 102, 255, 0.2)',\n                'rgba(255, 159, 64, 0.2)',\n                'rgba(110, 110, 110, 0.2)',\n                'rgba(0, 201, 54, 0.2)',\n              ],\n              borderColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n                'rgba(75, 192, 192, 1)',\n                'rgba(153, 102, 255, 1)',\n                'rgba(255, 159, 64, 1)',\n                'rgba(110, 110, 110, 1)',\n                'rgba(0, 201, 54, 1)',\n              ],\n              borderWidth: 1,\n            },\n            // {\n            //   label: 'Quantity',\n            //   data: [47, 52, 67, 58, 9, 50],\n            //   backgroundColor: 'orange',\n            //   borderColor: 'red',\n            // },\n          ],\n        }}\n        height={400}\n        width={600}\n        options={{\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                },\n              },\n            ],\n          },\n          title: {\n            display: true,\n            position: 'top',\n            fontStyle: 'bold',\n            fontSize: 16,\n            padding: 30,\n            text: 'View Counts Of Each Dance move',\n          },\n\n          legend: {\n            display: false,\n          },\n        }}\n      />\n    </div>\n  )\n}\n\nexport default BarChart\n","/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/pages/Authenticate.js",["162"],"/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/InputAdornments/InputAdornments.js",["163","164","165","166"],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":3,"column":16,"nodeType":"173","messageId":"174","endLine":3,"endColumn":26},{"ruleId":"171","severity":1,"message":"175","line":4,"column":8,"nodeType":"173","messageId":"174","endLine":4,"endColumn":25},{"ruleId":"171","severity":1,"message":"176","line":5,"column":8,"nodeType":"173","messageId":"174","endLine":5,"endColumn":19},{"ruleId":"171","severity":1,"message":"177","line":6,"column":10,"nodeType":"173","messageId":"174","endLine":6,"endColumn":16},{"ruleId":"171","severity":1,"message":"178","line":6,"column":18,"nodeType":"173","messageId":"174","endLine":6,"endColumn":37},{"ruleId":"171","severity":1,"message":"179","line":8,"column":8,"nodeType":"173","messageId":"174","endLine":8,"endColumn":16},{"ruleId":"171","severity":1,"message":"180","line":12,"column":8,"nodeType":"173","messageId":"174","endLine":12,"endColumn":18},{"ruleId":"171","severity":1,"message":"181","line":14,"column":8,"nodeType":"173","messageId":"174","endLine":14,"endColumn":18},{"ruleId":"171","severity":1,"message":"182","line":37,"column":10,"nodeType":"173","messageId":"174","endLine":37,"endColumn":21},{"ruleId":"171","severity":1,"message":"183","line":37,"column":23,"nodeType":"173","messageId":"174","endLine":37,"endColumn":37},{"ruleId":"171","severity":1,"message":"184","line":50,"column":8,"nodeType":"173","messageId":"174","endLine":50,"endColumn":17},{"ruleId":"171","severity":1,"message":"185","line":50,"column":19,"nodeType":"173","messageId":"174","endLine":50,"endColumn":28},{"ruleId":"171","severity":1,"message":"186","line":50,"column":30,"nodeType":"173","messageId":"174","endLine":50,"endColumn":39},{"ruleId":"171","severity":1,"message":"187","line":51,"column":7,"nodeType":"173","messageId":"174","endLine":51,"endColumn":23},{"ruleId":"171","severity":1,"message":"188","line":2,"column":16,"nodeType":"173","messageId":"174","endLine":2,"endColumn":26},{"ruleId":"171","severity":1,"message":"189","line":3,"column":8,"nodeType":"173","messageId":"174","endLine":3,"endColumn":17},{"ruleId":"171","severity":1,"message":"190","line":4,"column":8,"nodeType":"173","messageId":"174","endLine":4,"endColumn":17},{"ruleId":"171","severity":1,"message":"191","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":14},{"ruleId":"171","severity":1,"message":"172","line":2,"column":16,"nodeType":"173","messageId":"174","endLine":2,"endColumn":26},{"ruleId":"171","severity":1,"message":"192","line":14,"column":3,"nodeType":"173","messageId":"174","endLine":14,"endColumn":11},{"ruleId":"171","severity":1,"message":"193","line":15,"column":3,"nodeType":"173","messageId":"174","endLine":15,"endColumn":6},{"ruleId":"171","severity":1,"message":"194","line":81,"column":10,"nodeType":"173","messageId":"174","endLine":81,"endColumn":21},{"ruleId":"171","severity":1,"message":"195","line":81,"column":23,"nodeType":"173","messageId":"174","endLine":81,"endColumn":37},{"ruleId":"196","severity":1,"message":"197","line":218,"column":3,"nodeType":"173","endLine":218,"endColumn":12,"suggestions":"198"},{"ruleId":"171","severity":1,"message":"199","line":7,"column":10,"nodeType":"173","messageId":"174","endLine":7,"endColumn":16},{"ruleId":"171","severity":1,"message":"181","line":8,"column":8,"nodeType":"173","messageId":"174","endLine":8,"endColumn":18},{"ruleId":"171","severity":1,"message":"200","line":10,"column":8,"nodeType":"173","messageId":"174","endLine":10,"endColumn":17},{"ruleId":"171","severity":1,"message":"201","line":11,"column":8,"nodeType":"173","messageId":"174","endLine":11,"endColumn":16},{"ruleId":"202","severity":1,"message":"203","line":17,"column":11,"nodeType":"204","endLine":21,"endColumn":13},{"ruleId":"171","severity":1,"message":"205","line":10,"column":10,"nodeType":"173","messageId":"174","endLine":10,"endColumn":13},{"ruleId":"171","severity":1,"message":"206","line":12,"column":8,"nodeType":"173","messageId":"174","endLine":12,"endColumn":19},{"ruleId":"171","severity":1,"message":"207","line":4,"column":8,"nodeType":"173","messageId":"174","endLine":4,"endColumn":19},{"ruleId":"171","severity":1,"message":"199","line":6,"column":8,"nodeType":"173","messageId":"174","endLine":6,"endColumn":14},{"ruleId":"171","severity":1,"message":"208","line":3,"column":8,"nodeType":"173","messageId":"174","endLine":3,"endColumn":13},{"ruleId":"171","severity":1,"message":"209","line":4,"column":8,"nodeType":"173","messageId":"174","endLine":4,"endColumn":17},{"ruleId":"171","severity":1,"message":"210","line":5,"column":8,"nodeType":"173","messageId":"174","endLine":5,"endColumn":18},{"ruleId":"171","severity":1,"message":"211","line":6,"column":10,"nodeType":"173","messageId":"174","endLine":6,"endColumn":18},{"ruleId":"171","severity":1,"message":"212","line":7,"column":8,"nodeType":"173","messageId":"174","endLine":7,"endColumn":18},{"ruleId":"171","severity":1,"message":"213","line":10,"column":10,"nodeType":"173","messageId":"174","endLine":10,"endColumn":18},{"ruleId":"171","severity":1,"message":"214","line":11,"column":7,"nodeType":"173","messageId":"174","endLine":11,"endColumn":16},{"ruleId":"171","severity":1,"message":"215","line":3,"column":25,"nodeType":"173","messageId":"174","endLine":3,"endColumn":33},{"ruleId":"171","severity":1,"message":"207","line":4,"column":8,"nodeType":"173","messageId":"174","endLine":4,"endColumn":19},{"ruleId":"171","severity":1,"message":"199","line":6,"column":8,"nodeType":"173","messageId":"174","endLine":6,"endColumn":14},{"ruleId":"171","severity":1,"message":"216","line":31,"column":9,"nodeType":"173","messageId":"174","endLine":31,"endColumn":13},{"ruleId":"167","replacedBy":"217"},{"ruleId":"169","replacedBy":"218"},{"ruleId":"171","severity":1,"message":"219","line":3,"column":10,"nodeType":"173","messageId":"174","endLine":3,"endColumn":16},{"ruleId":"171","severity":1,"message":"199","line":2,"column":28,"nodeType":"173","messageId":"174","endLine":2,"endColumn":34},{"ruleId":"171","severity":1,"message":"220","line":5,"column":8,"nodeType":"173","messageId":"174","endLine":5,"endColumn":13},{"ruleId":"171","severity":1,"message":"221","line":6,"column":8,"nodeType":"173","messageId":"174","endLine":6,"endColumn":19},{"ruleId":"171","severity":1,"message":"222","line":10,"column":8,"nodeType":"173","messageId":"174","endLine":10,"endColumn":22},{"ruleId":"171","severity":1,"message":"223","line":12,"column":8,"nodeType":"173","messageId":"174","endLine":12,"endColumn":17},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'RadioButtonsGroup' is defined but never used.","'StartButton' is defined but never used.","'motion' is defined but never used.","'AnimateSharedLayout' is defined but never used.","'FlipMove' is defined but never used.","'BasicTable' is defined but never used.","'classNames' is defined but never used.","'correctness' is assigned a value but never used.","'setCorrectness' is assigned a value but never used.","'position1' is assigned a value but never used.","'position2' is assigned a value but never used.","'position3' is assigned a value but never used.","'currentDanceMove' is assigned a value but never used.","'makeStyles' is defined but never used.","'MediaCard' is defined but never used.","'SearchBar' is defined but never used.","'Card' is defined but never used.","'BarChart' is defined but never used.","'Bar' is defined but never used.","'p1LeftAData' is assigned a value but never used.","'setP1LeftAData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setCorrectness'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [position1, testLog.position1, testLog.position2, testLog.position3, testLog.danceMove, position2, position3, currentDanceMove] as a second argument to the useEffect Hook.",["226"],"'Button' is defined but never used.","'greenTick' is defined but never used.","'redCross' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Box' is defined but never used.","'ReactPlayer' is defined but never used.","'CardActions' is defined but never used.","'Paper' is defined but never used.","'InputBase' is defined but never used.","'IconButton' is defined but never used.","'FaSearch' is defined but never used.","'SearchIcon' is defined but never used.","'useState' is defined but never used.","'useStyles' is assigned a value but never used.","'GiPodium' is defined but never used.","'bull' is assigned a value but never used.",["224"],["225"],"'FaBold' is defined but never used.","'Input' is defined but never used.","'FilledInput' is defined but never used.","'FormHelperText' is defined but never used.","'TextField' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},"Add dependencies array: [position1, testLog.position1, testLog.position2, testLog.position3, testLog.danceMove, position2, position3, currentDanceMove]",{"range":"229","text":"230"},[6904,6904],", [position1, testLog.position1, testLog.position2, testLog.position3, testLog.danceMove, position2, position3, currentDanceMove]"]