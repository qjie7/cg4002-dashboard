{"ast":null,"code":"(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory(require(\"react\"), require(\"react-dom\"));else if (typeof define === 'function' && define.amd) define([\"react\", \"react-dom\"], factory);else if (typeof exports === 'object') exports[\"ReactDraggable\"] = factory(require(\"react\"), require(\"react-dom\"));else root[\"ReactDraggable\"] = factory(root[\"React\"], root[\"ReactDOM\"]);\n})(this, function (__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId])\n          /******/\n          return installedModules[moduleId].exports;\n        /******/\n\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n        var module = installedModules[moduleId] = {\n          /******/\n          exports: {},\n\n          /******/\n          id: moduleId,\n\n          /******/\n          loaded: false\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.loaded = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(0);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    [\n    /* 0 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      module.exports = __webpack_require__(1).default;\n      module.exports.DraggableCore = __webpack_require__(9).default;\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n          var _arr = [];\n          var _n = true;\n          var _d = false;\n          var _e = undefined;\n\n          try {\n            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n              _arr.push(_s.value);\n\n              if (i && _arr.length === i) break;\n            }\n          } catch (err) {\n            _d = true;\n            _e = err;\n          } finally {\n            try {\n              if (!_n && _i[\"return\"]) _i[\"return\"]();\n            } finally {\n              if (_d) throw _e;\n            }\n          }\n\n          return _arr;\n        }\n\n        return function (arr, i) {\n          if (Array.isArray(arr)) {\n            return arr;\n          } else if (Symbol.iterator in Object(arr)) {\n            return sliceIterator(arr, i);\n          } else {\n            throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n          }\n        };\n      }();\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      var _react = __webpack_require__(2);\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _reactDom = __webpack_require__(3);\n\n      var _reactDom2 = _interopRequireDefault(_reactDom);\n\n      var _classnames = __webpack_require__(4);\n\n      var _classnames2 = _interopRequireDefault(_classnames);\n\n      var _domFns = __webpack_require__(5);\n\n      var _positionFns = __webpack_require__(8);\n\n      var _shims = __webpack_require__(6);\n\n      var _DraggableCore = __webpack_require__(9);\n\n      var _DraggableCore2 = _interopRequireDefault(_DraggableCore);\n\n      var _log = __webpack_require__(10);\n\n      var _log2 = _interopRequireDefault(_log);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      } // $FlowIgnore\n      //\n      // Define <Draggable>\n      //\n\n\n      var Draggable = function (_React$Component) {\n        _inherits(Draggable, _React$Component);\n\n        function Draggable() {\n          var _ref;\n\n          var _temp, _this, _ret;\n\n          _classCallCheck(this, Draggable);\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Draggable.__proto__ || Object.getPrototypeOf(Draggable)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n            // Whether or not we are currently dragging.\n            dragging: false,\n            // Whether or not we have been dragged before.\n            dragged: false,\n            // Current transform x and y.\n            clientX: _this.props.start.x,\n            clientY: _this.props.start.y,\n            // Used for compensating for out-of-bounds drags\n            slackX: 0,\n            slackY: 0,\n            // Can only determine if SVG after mounting\n            isElementSVG: false\n          }, _this.onDragStart = function (e, coreEvent) {\n            (0, _log2.default)('Draggable: onDragStart: %j', coreEvent.position); // Short-circuit if user's callback killed it.\n\n            var shouldStart = _this.props.onStart(e, (0, _domFns.createUIEvent)(_this, coreEvent)); // Kills start event on core as well, so move handlers are never bound.\n\n\n            if (shouldStart === false) return false;\n\n            _this.setState({\n              dragging: true,\n              dragged: true\n            });\n          }, _this.onDrag = function (e, coreEvent) {\n            if (!_this.state.dragging) return false;\n            (0, _log2.default)('Draggable: onDrag: %j', coreEvent.position);\n            var uiEvent = (0, _domFns.createUIEvent)(_this, coreEvent);\n            var newState = {\n              clientX: uiEvent.position.left,\n              clientY: uiEvent.position.top\n            }; // Keep within bounds.\n\n            if (_this.props.bounds) {\n              // Save original x and y.\n              var _clientX = newState.clientX,\n                  _clientY = newState.clientY; // Add slack to the values used to calculate bound position. This will ensure that if\n              // we start removing slack, the element won't react to it right away until it's been\n              // completely removed.\n\n              newState.clientX += _this.state.slackX;\n              newState.clientY += _this.state.slackY; // Get bound position. This will ceil/floor the x and y within the boundaries.\n              // Recalculate slack by noting how much was shaved by the boundPosition handler.\n\n              var _getBoundPosition = (0, _positionFns.getBoundPosition)(_this, newState.clientX, newState.clientY);\n\n              var _getBoundPosition2 = _slicedToArray(_getBoundPosition, 2);\n\n              newState.clientX = _getBoundPosition2[0];\n              newState.clientY = _getBoundPosition2[1];\n              newState.slackX = _this.state.slackX + (_clientX - newState.clientX);\n              newState.slackY = _this.state.slackY + (_clientY - newState.clientY); // Update the event we fire to reflect what really happened after bounds took effect.\n\n              uiEvent.position.left = _clientX;\n              uiEvent.position.top = _clientY;\n              uiEvent.deltaX = newState.clientX - _this.state.clientX;\n              uiEvent.deltaY = newState.clientY - _this.state.clientY;\n            } // Short-circuit if user's callback killed it.\n\n\n            var shouldUpdate = _this.props.onDrag(e, uiEvent);\n\n            if (shouldUpdate === false) return false;\n\n            _this.setState(newState);\n          }, _this.onDragStop = function (e, coreEvent) {\n            if (!_this.state.dragging) return false; // Short-circuit if user's callback killed it.\n\n            var shouldStop = _this.props.onStop(e, (0, _domFns.createUIEvent)(_this, coreEvent));\n\n            if (shouldStop === false) return false;\n            (0, _log2.default)('Draggable: onDragStop: %j', coreEvent.position);\n\n            _this.setState({\n              dragging: false,\n              slackX: 0,\n              slackY: 0\n            });\n          }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n\n        _createClass(Draggable, [{\n          key: 'componentDidMount',\n          value: function componentDidMount() {\n            // Check to see if the element passed is an instanceof SVGElement\n            if (_reactDom2.default.findDOMNode(this) instanceof SVGElement) {\n              this.setState({\n                isElementSVG: true\n              });\n            }\n          }\n        }, {\n          key: 'componentWillUnmount',\n          value: function componentWillUnmount() {\n            this.setState({\n              dragging: false\n            }); // prevents invariant if unmounted while dragging\n          }\n        }, {\n          key: 'componentWillReceiveProps',\n          value: function componentWillReceiveProps(next) {\n            var _state = this.state,\n                clientX = _state.clientX,\n                clientY = _state.clientY;\n\n            if (next.x !== clientX || next.y !== clientY) {\n              var _getBoundPosition3 = (0, _positionFns.getBoundPosition)(this, next.x, next.y);\n\n              var _getBoundPosition4 = _slicedToArray(_getBoundPosition3, 2);\n\n              clientX = _getBoundPosition4[0];\n              clientY = _getBoundPosition4[1];\n              this.setState({\n                clientX: clientX,\n                clientY: clientY\n              });\n            }\n          }\n        }, {\n          key: 'render',\n          value: function render() {\n            var style = {},\n                svgTransform = null; // Add a CSS transform to move the element around. This allows us to move the element around\n            // without worrying about whether or not it is relatively or absolutely positioned.\n            // If the item you are dragging already has a transform set, wrap it in a <span> so <Draggable>\n            // has a clean slate.\n\n            var transformOpts = {\n              // Set left if horizontal drag is enabled\n              x: (0, _positionFns.canDragX)(this) ? this.state.clientX : this.props.start.x,\n              // Set top if vertical drag is enabled\n              y: (0, _positionFns.canDragY)(this) ? this.state.clientY : this.props.start.y\n            }; // If this element was SVG, we use the `transform` attribute.\n\n            if (this.state.isElementSVG) {\n              svgTransform = (0, _domFns.createSVGTransform)(transformOpts);\n            } else {\n              style = (0, _domFns.createCSSTransform)(transformOpts);\n            } // zIndex option\n\n\n            if (this.state.dragging && !isNaN(this.props.zIndex)) {\n              style.zIndex = this.props.zIndex;\n            } // Mark with class while dragging\n\n\n            var className = (0, _classnames2.default)(this.props.children.props.className || '', 'react-draggable', {\n              'react-draggable-dragging': this.state.dragging,\n              'react-draggable-dragged': this.state.dragged\n            }); // Reuse the child provided\n            // This makes it flexible to use whatever element is wanted (div, ul, etc)\n\n            return _react2.default.createElement(_DraggableCore2.default, _extends({}, this.props, {\n              onStart: this.onDragStart,\n              onDrag: this.onDrag,\n              onStop: this.onDragStop\n            }), _react2.default.cloneElement(_react2.default.Children.only(this.props.children), {\n              className: className,\n              style: _extends({}, this.props.children.props.style, style),\n              transform: svgTransform\n            }));\n          }\n        }]);\n\n        return Draggable;\n      }(_react2.default.Component);\n\n      Draggable.displayName = 'Draggable';\n      Draggable.propTypes = _extends({}, _DraggableCore2.default.propTypes, {\n        /**\n         * `axis` determines which axis the draggable can move.\n         *\n         *  Note that all callbacks will still return data as normal. This only\n         *  controls flushing to the DOM.\n         *\n         * 'both' allows movement horizontally and vertically.\n         * 'x' limits movement to horizontal axis.\n         * 'y' limits movement to vertical axis.\n         * 'none' limits all movement.\n         *\n         * Defaults to 'both'.\n         */\n        axis: _react.PropTypes.oneOf(['both', 'x', 'y', 'none']),\n\n        /**\n         * `bounds` determines the range of movement available to the element.\n         * Available values are:\n         *\n         * 'parent' restricts movement within the Draggable's parent node.\n         *\n         * Alternatively, pass an object with the following properties, all of which are optional:\n         *\n         * {left: LEFT_BOUND, right: RIGHT_BOUND, bottom: BOTTOM_BOUND, top: TOP_BOUND}\n         *\n         * All values are in px.\n         *\n         * Example:\n         *\n         * ```jsx\n         *   let App = React.createClass({\n         *       render: function () {\n         *         return (\n         *            <Draggable bounds={{right: 300, bottom: 300}}>\n         *              <div>Content</div>\n         *           </Draggable>\n         *         );\n         *       }\n         *   });\n         * ```\n         */\n        bounds: _react.PropTypes.oneOfType([_react.PropTypes.shape({\n          left: _react.PropTypes.Number,\n          right: _react.PropTypes.Number,\n          top: _react.PropTypes.Number,\n          bottom: _react.PropTypes.Number\n        }), _react.PropTypes.string, _react.PropTypes.oneOf([false])]),\n\n        /**\n         * `start` specifies the x and y that the dragged item should start at\n         *\n         * Example:\n         *\n         * ```jsx\n         *      let App = React.createClass({\n         *          render: function () {\n         *              return (\n         *                  <Draggable start={{x: 25, y: 25}}>\n         *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n         *                  </Draggable>\n         *              );\n         *          }\n         *      });\n         * ```\n         */\n        start: _react.PropTypes.shape({\n          x: _react.PropTypes.number,\n          y: _react.PropTypes.number\n        }),\n\n        /**\n         * `zIndex` specifies the zIndex to use while dragging.\n         *\n         * Example:\n         *\n         * ```jsx\n         *   let App = React.createClass({\n         *       render: function () {\n         *           return (\n         *               <Draggable zIndex={100}>\n         *                   <div>I have a zIndex</div>\n         *               </Draggable>\n         *           );\n         *       }\n         *   });\n         * ```\n         */\n        zIndex: _react.PropTypes.number,\n\n        /**\n         * These properties should be defined on the child, not here.\n         */\n        className: _shims.dontSetMe,\n        style: _shims.dontSetMe,\n        transform: _shims.dontSetMe\n      });\n      Draggable.defaultProps = _extends({}, _DraggableCore2.default.defaultProps, {\n        axis: 'both',\n        bounds: false,\n        start: {\n          x: 0,\n          y: 0\n        },\n        zIndex: NaN,\n        x: 0,\n        y: 0\n      });\n      exports.default = Draggable;\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports) {\n      module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n      /***/\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports) {\n      module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n      /***/\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n      /*!\n      Copyright (c) 2016 Jed Watson.\n      Licensed under the MIT License (MIT), see\n      http://jedwatson.github.io/classnames\n      */\n\n      /* global define */\n\n\n      (function () {\n        'use strict';\n\n        var hasOwn = {}.hasOwnProperty;\n\n        function classNames() {\n          var classes = [];\n\n          for (var i = 0; i < arguments.length; i++) {\n            var arg = arguments[i];\n            if (!arg) continue;\n            var argType = typeof arg;\n\n            if (argType === 'string' || argType === 'number') {\n              classes.push(arg);\n            } else if (Array.isArray(arg)) {\n              classes.push(classNames.apply(null, arg));\n            } else if (argType === 'object') {\n              for (var key in arg) {\n                if (hasOwn.call(arg, key) && arg[key]) {\n                  classes.push(key);\n                }\n              }\n            }\n          }\n\n          return classes.join(' ');\n        }\n\n        if (typeof module !== 'undefined' && module.exports) {\n          module.exports = classNames;\n        } else if (true) {\n          // register as 'classnames', consistent with npm package name\n          !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n            return classNames;\n          }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n        } else {\n          window.classNames = classNames;\n        }\n      })();\n      /***/\n\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      exports.matchesSelector = matchesSelector;\n      exports.addEvent = addEvent;\n      exports.removeEvent = removeEvent;\n      exports.outerHeight = outerHeight;\n      exports.outerWidth = outerWidth;\n      exports.innerHeight = innerHeight;\n      exports.innerWidth = innerWidth;\n      exports.createCSSTransform = createCSSTransform;\n      exports.createSVGTransform = createSVGTransform;\n      exports.addUserSelectStyles = addUserSelectStyles;\n      exports.removeUserSelectStyles = removeUserSelectStyles;\n      exports.styleHacks = styleHacks;\n      exports.createCoreEvent = createCoreEvent;\n      exports.createUIEvent = createUIEvent;\n\n      var _shims = __webpack_require__(6);\n\n      var _getPrefix = __webpack_require__(7);\n\n      var _getPrefix2 = _interopRequireDefault(_getPrefix);\n\n      var _reactDom = __webpack_require__(3);\n\n      var _reactDom2 = _interopRequireDefault(_reactDom);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _defineProperty(obj, key, value) {\n        if (key in obj) {\n          Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n          });\n        } else {\n          obj[key] = value;\n        }\n\n        return obj;\n      }\n\n      var matchesSelectorFunc = '';\n\n      function matchesSelector(el, selector) {\n        if (!matchesSelectorFunc) {\n          matchesSelectorFunc = (0, _shims.findInArray)(['matches', 'webkitMatchesSelector', 'mozMatchesSelector', 'msMatchesSelector', 'oMatchesSelector'], function (method) {\n            // $FlowIgnore: Doesn't think elements are indexable\n            return (0, _shims.isFunction)(el[method]);\n          });\n        } // $FlowIgnore: Doesn't think elements are indexable\n\n\n        return el[matchesSelectorFunc].call(el, selector);\n      }\n\n      function addEvent(el, event, handler) {\n        if (!el) {\n          return;\n        }\n\n        if (el.attachEvent) {\n          el.attachEvent('on' + event, handler);\n        } else if (el.addEventListener) {\n          el.addEventListener(event, handler, true);\n        } else {\n          // $FlowIgnore: Doesn't think elements are indexable\n          el['on' + event] = handler;\n        }\n      }\n\n      function removeEvent(el, event, handler) {\n        if (!el) {\n          return;\n        }\n\n        if (el.detachEvent) {\n          el.detachEvent('on' + event, handler);\n        } else if (el.removeEventListener) {\n          el.removeEventListener(event, handler, true);\n        } else {\n          // $FlowIgnore: Doesn't think elements are indexable\n          el['on' + event] = null;\n        }\n      }\n\n      function outerHeight(node) {\n        // This is deliberately excluding margin for our calculations, since we are using\n        // offsetTop which is including margin. See getBoundPosition\n        var height = node.clientHeight;\n        var computedStyle = window.getComputedStyle(node);\n        height += (0, _shims.int)(computedStyle.borderTopWidth);\n        height += (0, _shims.int)(computedStyle.borderBottomWidth);\n        return height;\n      }\n\n      function outerWidth(node) {\n        // This is deliberately excluding margin for our calculations, since we are using\n        // offsetLeft which is including margin. See getBoundPosition\n        var width = node.clientWidth;\n        var computedStyle = window.getComputedStyle(node);\n        width += (0, _shims.int)(computedStyle.borderLeftWidth);\n        width += (0, _shims.int)(computedStyle.borderRightWidth);\n        return width;\n      }\n\n      function innerHeight(node) {\n        var height = node.clientHeight;\n        var computedStyle = window.getComputedStyle(node);\n        height -= (0, _shims.int)(computedStyle.paddingTop);\n        height -= (0, _shims.int)(computedStyle.paddingBottom);\n        return height;\n      }\n\n      function innerWidth(node) {\n        var width = node.clientWidth;\n        var computedStyle = window.getComputedStyle(node);\n        width -= (0, _shims.int)(computedStyle.paddingLeft);\n        width -= (0, _shims.int)(computedStyle.paddingRight);\n        return width;\n      }\n\n      function createCSSTransform(_ref) {\n        var x = _ref.x,\n            y = _ref.y; // Replace unitless items with px\n\n        return _defineProperty({}, (0, _getPrefix.browserPrefixToKey)('transform', _getPrefix2.default), 'translate(' + x + 'px,' + y + 'px)');\n      }\n\n      function createSVGTransform(_ref3) {\n        var x = _ref3.x,\n            y = _ref3.y;\n        return 'translate(' + x + ',' + y + ')';\n      } // User-select Hacks:\n      //\n      // Useful for preventing blue highlights all over everything when dragging.\n\n\n      var userSelectPrefix = (0, _getPrefix.getPrefix)('user-select');\n      var userSelect = (0, _getPrefix.browserPrefixToStyle)('user-select', userSelectPrefix);\n      var userSelectStyle = ';' + userSelect + ': none;';\n\n      function addUserSelectStyles() {\n        var style = document.body.getAttribute('style') || '';\n        document.body.setAttribute('style', style + userSelectStyle);\n      }\n\n      function removeUserSelectStyles() {\n        var style = document.body.getAttribute('style') || '';\n        document.body.setAttribute('style', style.replace(userSelectStyle, ''));\n      }\n\n      function styleHacks() {\n        var childStyle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // Workaround IE pointer events; see #51\n        // https://github.com/mzabriskie/react-draggable/issues/51#issuecomment-103488278\n\n        return _extends({\n          touchAction: 'none'\n        }, childStyle);\n      } // Create an event exposed by <DraggableCore>\n\n\n      function createCoreEvent(draggable, clientX, clientY) {\n        // State changes are often (but not always!) async. We want the latest value.\n        var state = draggable._pendingState || draggable.state;\n        var isStart = !(0, _shims.isNum)(state.lastX);\n        return {\n          node: _reactDom2.default.findDOMNode(draggable),\n          position: isStart ? // If this is our first move, use the clientX and clientY as last coords.\n          {\n            deltaX: 0,\n            deltaY: 0,\n            lastX: clientX,\n            lastY: clientY,\n            clientX: clientX,\n            clientY: clientY\n          } : // Otherwise calculate proper values.\n          {\n            deltaX: clientX - state.lastX,\n            deltaY: clientY - state.lastY,\n            lastX: state.lastX,\n            lastY: state.lastY,\n            clientX: clientX,\n            clientY: clientY\n          }\n        };\n      } // Create an event exposed by <Draggable>\n\n\n      function createUIEvent(draggable, coreEvent) {\n        return {\n          node: _reactDom2.default.findDOMNode(draggable),\n          position: {\n            left: draggable.state.clientX + coreEvent.position.deltaX,\n            top: draggable.state.clientY + coreEvent.position.deltaY\n          },\n          deltaX: coreEvent.position.deltaX,\n          deltaY: coreEvent.position.deltaY\n        };\n      }\n      /***/\n\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.findInArray = findInArray;\n      exports.isFunction = isFunction;\n      exports.isNum = isNum;\n      exports.int = int;\n      exports.dontSetMe = dontSetMe; // @credits https://gist.github.com/rogozhnikoff/a43cfed27c41e4e68cdc\n\n      function findInArray(array, callback) {\n        for (var i = 0, length = array.length; i < length; i++) {\n          if (callback.apply(callback, [array[i], i, array])) return array[i];\n        }\n      }\n\n      function isFunction(func) {\n        return typeof func === 'function' || Object.prototype.toString.call(func) === '[object Function]';\n      }\n\n      function isNum(num) {\n        return typeof num === 'number' && !isNaN(num);\n      }\n\n      function int(a) {\n        return parseInt(a, 10);\n      }\n\n      function dontSetMe(props, propName, componentName) {\n        if (props[propName]) {\n          throw new Error('Invalid prop ' + propName + ' passed to ' + componentName + ' - do not set this, set it on the child.');\n        }\n      }\n      /***/\n\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getPrefix = getPrefix;\n      exports.browserPrefixToKey = browserPrefixToKey;\n      exports.browserPrefixToStyle = browserPrefixToStyle;\n      var prefixes = ['Moz', 'Webkit', 'O', 'ms'];\n\n      function getPrefix() {\n        var prop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform'; // Checking specifically for 'window.document' is for pseudo-browser server-side\n        // environments that define 'window' as the global context.\n        // E.g. React-rails (see https://github.com/reactjs/react-rails/pull/84)\n\n        if (typeof window === 'undefined' || typeof window.document === 'undefined') return '';\n        var style = window.document.documentElement.style;\n        if (prop in style) return '';\n\n        for (var i = 0; i < prefixes.length; i++) {\n          if (browserPrefixToStyle(prop, prefixes[i]) in style) return prefixes[i];\n        }\n\n        return '';\n      }\n\n      function browserPrefixToKey(prop, prefix) {\n        return prefix ? '' + prefix + kebabToTitleCase(prop) : prop;\n      }\n\n      function browserPrefixToStyle(prop, prefix) {\n        return prefix ? '-' + prefix.toLowerCase() + '-' + prop : prop;\n      }\n\n      function kebabToTitleCase(str) {\n        var out = '';\n        var shouldCapitalize = true;\n\n        for (var i = 0; i < str.length; i++) {\n          if (shouldCapitalize) {\n            out += str[i].toUpperCase();\n            shouldCapitalize = false;\n          } else if (str[i] === '-') {\n            shouldCapitalize = true;\n          } else {\n            out += str[i];\n          }\n        }\n\n        return out;\n      } // Default export is the prefix itself, like 'Moz', 'Webkit', etc\n      // Note that you may have to re-test for certain things; for instance, Chrome 50\n      // can handle unprefixed `transform`, but not unprefixed `user-select`\n\n\n      exports.default = getPrefix();\n      /***/\n    },\n    /* 8 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getBoundPosition = getBoundPosition;\n      exports.snapToGrid = snapToGrid;\n      exports.canDragX = canDragX;\n      exports.canDragY = canDragY;\n      exports.getControlPosition = getControlPosition;\n\n      var _react = __webpack_require__(2);\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _shims = __webpack_require__(6);\n\n      var _reactDom = __webpack_require__(3);\n\n      var _reactDom2 = _interopRequireDefault(_reactDom);\n\n      var _domFns = __webpack_require__(5);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function getBoundPosition(draggable, clientX, clientY) {\n        // If no bounds, short-circuit and move on\n        if (!draggable.props.bounds) return [clientX, clientY]; // Clone new bounds\n\n        var bounds = draggable.props.bounds;\n        bounds = typeof bounds === 'string' ? bounds : cloneBounds(bounds);\n\n        var node = _reactDom2.default.findDOMNode(draggable);\n\n        if (typeof bounds === 'string') {\n          var boundNode = void 0;\n\n          if (bounds === 'parent') {\n            boundNode = node.parentNode;\n          } else {\n            boundNode = document.querySelector(bounds);\n            if (!boundNode) throw new Error('Bounds selector \"' + bounds + '\" could not find an element.');\n          }\n\n          var nodeStyle = window.getComputedStyle(node);\n          var boundNodeStyle = window.getComputedStyle(boundNode); // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.\n\n          bounds = {\n            left: -node.offsetLeft + (0, _shims.int)(boundNodeStyle.paddingLeft) + (0, _shims.int)(nodeStyle.borderLeftWidth) + (0, _shims.int)(nodeStyle.marginLeft),\n            top: -node.offsetTop + (0, _shims.int)(boundNodeStyle.paddingTop) + (0, _shims.int)(nodeStyle.borderTopWidth) + (0, _shims.int)(nodeStyle.marginTop),\n            right: (0, _domFns.innerWidth)(boundNode) - (0, _domFns.outerWidth)(node) - node.offsetLeft,\n            bottom: (0, _domFns.innerHeight)(boundNode) - (0, _domFns.outerHeight)(node) - node.offsetTop\n          };\n        } // Keep x and y below right and bottom limits...\n\n\n        if ((0, _shims.isNum)(bounds.right)) clientX = Math.min(clientX, bounds.right);\n        if ((0, _shims.isNum)(bounds.bottom)) clientY = Math.min(clientY, bounds.bottom); // But above left and top limits.\n\n        if ((0, _shims.isNum)(bounds.left)) clientX = Math.max(clientX, bounds.left);\n        if ((0, _shims.isNum)(bounds.top)) clientY = Math.max(clientY, bounds.top);\n        return [clientX, clientY];\n      }\n\n      function snapToGrid(grid, pendingX, pendingY) {\n        var x = Math.round(pendingX / grid[0]) * grid[0];\n        var y = Math.round(pendingY / grid[1]) * grid[1];\n        return [x, y];\n      }\n\n      function canDragX(draggable) {\n        return draggable.props.axis === 'both' || draggable.props.axis === 'x';\n      }\n\n      function canDragY(draggable) {\n        return draggable.props.axis === 'both' || draggable.props.axis === 'y';\n      } // Get {clientX, clientY} positions from event.\n\n\n      function getControlPosition(e) {\n        var position = e.targetTouches && e.targetTouches[0] || e.changedTouches && e.changedTouches[0] || e;\n        return {\n          clientX: position.clientX,\n          clientY: position.clientY\n        };\n      } // A lot faster than stringify/parse\n\n\n      function cloneBounds(bounds) {\n        return {\n          left: bounds.left,\n          top: bounds.top,\n          right: bounds.right,\n          bottom: bounds.bottom\n        };\n      }\n      /***/\n\n    },\n    /* 9 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n          var _arr = [];\n          var _n = true;\n          var _d = false;\n          var _e = undefined;\n\n          try {\n            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n              _arr.push(_s.value);\n\n              if (i && _arr.length === i) break;\n            }\n          } catch (err) {\n            _d = true;\n            _e = err;\n          } finally {\n            try {\n              if (!_n && _i[\"return\"]) _i[\"return\"]();\n            } finally {\n              if (_d) throw _e;\n            }\n          }\n\n          return _arr;\n        }\n\n        return function (arr, i) {\n          if (Array.isArray(arr)) {\n            return arr;\n          } else if (Symbol.iterator in Object(arr)) {\n            return sliceIterator(arr, i);\n          } else {\n            throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n          }\n        };\n      }();\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      var _react = __webpack_require__(2);\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _domFns = __webpack_require__(5);\n\n      var _positionFns = __webpack_require__(8);\n\n      var _shims = __webpack_require__(6);\n\n      var _log = __webpack_require__(10);\n\n      var _log2 = _interopRequireDefault(_log);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      } // Simple abstraction for dragging events names.\n\n\n      var eventsFor = {\n        touch: {\n          start: 'touchstart',\n          move: 'touchmove',\n          stop: 'touchend'\n        },\n        mouse: {\n          start: 'mousedown',\n          move: 'mousemove',\n          stop: 'mouseup'\n        }\n      }; // Default to mouse events.\n\n      var dragEventFor = eventsFor.mouse; //\n      // Define <DraggableCore>.\n      //\n      // <DraggableCore> is for advanced usage of <Draggable>. It maintains minimal internal state so it can\n      // work well with libraries that require more control over the element.\n      //\n\n      var DraggableCore = function (_React$Component) {\n        _inherits(DraggableCore, _React$Component);\n\n        function DraggableCore() {\n          var _ref;\n\n          var _temp, _this, _ret;\n\n          _classCallCheck(this, DraggableCore);\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DraggableCore.__proto__ || Object.getPrototypeOf(DraggableCore)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n            dragging: false,\n            // Used while dragging to determine deltas.\n            lastX: null,\n            lastY: null\n          }, _this.handleDragStart = function (e) {\n            // Make it possible to attach event handlers on top of this one.\n            _this.props.onMouseDown(e); // Only accept left-clicks.\n\n\n            if (!_this.props.allowAnyClick && typeof e.button === 'number' && e.button !== 0) return false; // Short circuit if handle or cancel prop was provided and selector doesn't match.\n\n            if (_this.props.disabled || _this.props.handle && !(0, _domFns.matchesSelector)(e.target, _this.props.handle) || _this.props.cancel && (0, _domFns.matchesSelector)(e.target, _this.props.cancel)) {\n              return;\n            } // Set touch identifier in component state if this is a touch event. This allows us to\n            // distinguish between individual touches on multitouch screens by identifying which\n            // touchpoint was set to this element.\n\n\n            if (e.targetTouches) {\n              _this.setState({\n                touchIdentifier: e.targetTouches[0].identifier\n              });\n            } // Add a style to the body to disable user-select. This prevents text from\n            // being selected all over the page.\n\n\n            if (_this.props.enableUserSelectHack) (0, _domFns.addUserSelectStyles)(); // Get the current drag point from the event. This is used as the offset.\n\n            var _getControlPosition = (0, _positionFns.getControlPosition)(e),\n                clientX = _getControlPosition.clientX,\n                clientY = _getControlPosition.clientY; // Create an event object with all the data parents need to make a decision here.\n\n\n            var coreEvent = (0, _domFns.createCoreEvent)(_this, clientX, clientY);\n            (0, _log2.default)('DraggableCore: handleDragStart: %j', coreEvent.position); // Call event handler. If it returns explicit false, cancel.\n\n            (0, _log2.default)('calling', _this.props.onStart);\n\n            var shouldUpdate = _this.props.onStart(e, coreEvent);\n\n            if (shouldUpdate === false) return; // Initiate dragging. Set the current x and y as offsets\n            // so we know how much we've moved during the drag. This allows us\n            // to drag elements around even if they have been moved, without issue.\n\n            _this.setState({\n              dragging: true,\n              lastX: clientX,\n              lastY: clientY,\n              // Stored so we can adjust our offset if scrolled.\n              scrollX: document.body.scrollLeft,\n              scrollY: document.body.scrollTop\n            }); // Translate el on page scroll.\n\n\n            (0, _domFns.addEvent)(document, 'scroll', _this.handleScroll); // Add events to the document directly so we catch when the user's mouse/touch moves outside of\n            // this element. We use different events depending on whether or not we have detected that this\n            // is a touch-capable device.\n\n            (0, _domFns.addEvent)(document, dragEventFor.move, _this.handleDrag);\n            (0, _domFns.addEvent)(document, dragEventFor.stop, _this.handleDragStop);\n          }, _this.handleDrag = function (e) {\n            // Return if this is a touch event, but not the correct one for this element\n            if (e.targetTouches && e.targetTouches[0].identifier !== _this.state.touchIdentifier) return;\n            if (_this.props.disabled) return;\n\n            var _getControlPosition2 = (0, _positionFns.getControlPosition)(e),\n                clientX = _getControlPosition2.clientX,\n                clientY = _getControlPosition2.clientY; // Snap to grid if prop has been provided\n\n\n            if (Array.isArray(_this.props.grid)) {\n              var deltaX = clientX - _this.state.lastX,\n                  deltaY = clientY - _this.state.lastY;\n\n              var _snapToGrid = (0, _positionFns.snapToGrid)(_this.props.grid, deltaX, deltaY);\n\n              var _snapToGrid2 = _slicedToArray(_snapToGrid, 2);\n\n              deltaX = _snapToGrid2[0];\n              deltaY = _snapToGrid2[1];\n              if (!deltaX && !deltaY) return; // skip useless drag\n\n              clientX = _this.state.lastX + deltaX, clientY = _this.state.lastY + deltaY;\n            }\n\n            var coreEvent = (0, _domFns.createCoreEvent)(_this, clientX, clientY);\n            (0, _log2.default)('DraggableCore: handleDrag: %j', coreEvent.position); // Call event handler. If it returns explicit false, trigger end.\n\n            var shouldUpdate = _this.props.onDrag(e, coreEvent);\n\n            if (shouldUpdate === false) {\n              _this.handleDragStop({});\n\n              return;\n            }\n\n            _this.setState({\n              lastX: clientX,\n              lastY: clientY\n            });\n          }, _this.handleDragStop = function (e) {\n            if (!_this.state.dragging) return; // Short circuit if this is not the correct touch event. `changedTouches` contains all\n            // touch points that have been removed from the surface.\n\n            if (e.changedTouches && e.changedTouches[0].identifier !== _this.state.touchIdentifier) return; // Remove user-select hack\n\n            if (_this.props.enableUserSelectHack) (0, _domFns.removeUserSelectStyles)();\n\n            var _getControlPosition3 = (0, _positionFns.getControlPosition)(e),\n                clientX = _getControlPosition3.clientX,\n                clientY = _getControlPosition3.clientY;\n\n            var coreEvent = (0, _domFns.createCoreEvent)(_this, clientX, clientY);\n            (0, _log2.default)('DraggableCore: handleDragStop: %j', coreEvent.position); // Reset the el.\n\n            _this.setState({\n              dragging: false,\n              lastX: null,\n              lastY: null\n            }); // Call event handler\n\n\n            _this.props.onStop(e, coreEvent); // Remove event handlers\n\n\n            (0, _log2.default)('DraggableCore: Removing handlers');\n            (0, _domFns.removeEvent)(document, 'scroll', _this.handleScroll);\n            (0, _domFns.removeEvent)(document, dragEventFor.move, _this.handleDrag);\n            (0, _domFns.removeEvent)(document, dragEventFor.stop, _this.handleDragStop);\n          }, _this.handleScroll = function (e) {\n            var s = _this.state,\n                x = document.body.scrollLeft,\n                y = document.body.scrollTop; // Create the usual event, but make the scroll offset our deltas.\n\n            var coreEvent = (0, _domFns.createCoreEvent)(_this);\n            coreEvent.position.deltaX = x - s.scrollX;\n            coreEvent.position.deltaY = y - s.scrollY;\n\n            _this.setState({\n              lastX: s.lastX + coreEvent.position.deltaX,\n              lastY: s.lastY + coreEvent.position.deltaY,\n              scrollX: x,\n              scrollY: y\n            });\n\n            _this.props.onDrag(e, coreEvent);\n          }, _this.onMouseDown = function (e) {\n            dragEventFor = eventsFor.mouse; // on touchscreen laptops we could switch back to mouse\n\n            return _this.handleDragStart(e);\n          }, _this.onMouseUp = function (e) {\n            dragEventFor = eventsFor.mouse;\n            return _this.handleDragStop(e);\n          }, _this.onTouchStart = function (e) {\n            // We're on a touch device now, so change the event handlers\n            dragEventFor = eventsFor.touch;\n            return _this.handleDragStart(e);\n          }, _this.onTouchEnd = function (e) {\n            // We're on a touch device now, so change the event handlers\n            dragEventFor = eventsFor.touch;\n            return _this.handleDragStop(e);\n          }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n\n        _createClass(DraggableCore, [{\n          key: 'componentWillUnmount',\n          value: function componentWillUnmount() {\n            // Remove any leftover event handlers. Remove both touch and mouse handlers in case\n            // some browser quirk caused a touch event to fire during a mouse move, or vice versa.\n            (0, _domFns.removeEvent)(document, eventsFor.mouse.move, this.handleDrag);\n            (0, _domFns.removeEvent)(document, eventsFor.touch.move, this.handleDrag);\n            (0, _domFns.removeEvent)(document, eventsFor.mouse.stop, this.handleDragStop);\n            (0, _domFns.removeEvent)(document, eventsFor.touch.stop, this.handleDragStop);\n            (0, _domFns.removeEvent)(document, 'scroll', this.handleScroll);\n            if (this.props.enableUserSelectHack) (0, _domFns.removeUserSelectStyles)();\n          } // When the user scrolls, adjust internal state so the draggable moves along the page properly.\n          // This only fires when a drag is active.\n          // Same as onMouseDown (start drag), but now consider this a touch device.\n\n        }, {\n          key: 'render',\n          value: function render() {\n            // Reuse the child provided\n            // This makes it flexible to use whatever element is wanted (div, ul, etc)\n            return _react2.default.cloneElement(_react2.default.Children.only(this.props.children), {\n              style: (0, _domFns.styleHacks)(this.props.children.props.style),\n              // Note: mouseMove handler is attached to document so it will still function\n              // when the user drags quickly and leaves the bounds of the element.\n              onMouseDown: this.onMouseDown,\n              onTouchStart: this.onTouchStart,\n              onMouseUp: this.onMouseUp,\n              onTouchEnd: this.onTouchEnd\n            });\n          }\n        }]);\n\n        return DraggableCore;\n      }(_react2.default.Component);\n\n      DraggableCore.displayName = 'DraggableCore';\n      DraggableCore.propTypes = {\n        /**\n         * `allowAnyClick` allows dragging using any mouse button.\n         * By default, we only accept the left button.\n         *\n         * Defaults to `false`.\n         */\n        allowAnyClick: _react.PropTypes.bool,\n\n        /**\n         * `disabled`, if true, stops the <Draggable> from dragging. All handlers,\n         * with the exception of `onMouseDown`, will not fire.\n         *\n         * Example:\n         *\n         * ```jsx\n         *   let App = React.createClass({\n         *       render: function () {\n         *           return (\n         *               <Draggable disabled={true}>\n         *                   <div>I can't be dragged</div>\n         *               </Draggable>\n         *           );\n         *       }\n         *   });\n         * ```\n         */\n        disabled: _react.PropTypes.bool,\n\n        /**\n         * By default, we add 'user-select:none' attributes to the document body\n         * to prevent ugly text selection during drag. If this is causing problems\n         * for your app, set this to `false`.\n         */\n        enableUserSelectHack: _react.PropTypes.bool,\n\n        /**\n         * `grid` specifies the x and y that dragging should snap to.\n         *\n         * Example:\n         *\n         * ```jsx\n         *   let App = React.createClass({\n         *       render: function () {\n         *           return (\n         *               <Draggable grid={[25, 25]}>\n         *                   <div>I snap to a 25 x 25 grid</div>\n         *               </Draggable>\n         *           );\n         *       }\n         *   });\n         * ```\n         */\n        grid: _react.PropTypes.arrayOf(_react.PropTypes.number),\n\n        /**\n         * `handle` specifies a selector to be used as the handle that initiates drag.\n         *\n         * Example:\n         *\n         * ```jsx\n         *   let App = React.createClass({\n         *       render: function () {\n         *         return (\n         *            <Draggable handle=\".handle\">\n         *              <div>\n         *                  <div className=\"handle\">Click me to drag</div>\n         *                  <div>This is some other content</div>\n         *              </div>\n         *           </Draggable>\n         *         );\n         *       }\n         *   });\n         * ```\n         */\n        handle: _react.PropTypes.string,\n\n        /**\n         * `cancel` specifies a selector to be used to prevent drag initialization.\n         *\n         * Example:\n         *\n         * ```jsx\n         *   let App = React.createClass({\n         *       render: function () {\n         *           return(\n         *               <Draggable cancel=\".cancel\">\n         *                   <div>\n         *                     <div className=\"cancel\">You can't drag from here</div>\n         *            <div>Dragging here works fine</div>\n         *                   </div>\n         *               </Draggable>\n         *           );\n         *       }\n         *   });\n         * ```\n         */\n        cancel: _react.PropTypes.string,\n\n        /**\n         * Called when dragging starts.\n         * If this function returns the boolean false, dragging will be canceled.\n         *\n         * Example:\n         *\n         * ```js\n         *  function (event, ui) {}\n         * ```\n         *\n         * `event` is the Event that was triggered.\n         * `ui` is an object:\n         *\n         * ```js\n         *  {\n         *    position: {top: 0, left: 0}\n         *  }\n         * ```\n         */\n        onStart: _react.PropTypes.func,\n\n        /**\n         * Called while dragging.\n         * If this function returns the boolean false, dragging will be canceled.\n         *\n         * Example:\n         *\n         * ```js\n         *  function (event, ui) {}\n         * ```\n         *\n         * `event` is the Event that was triggered.\n         * `ui` is an object:\n         *\n         * ```js\n         *  {\n         *    position: {top: 0, left: 0}\n         *  }\n         * ```\n         */\n        onDrag: _react.PropTypes.func,\n\n        /**\n         * Called when dragging stops.\n         *\n         * Example:\n         *\n         * ```js\n         *  function (event, ui) {}\n         * ```\n         *\n         * `event` is the Event that was triggered.\n         * `ui` is an object:\n         *\n         * ```js\n         *  {\n         *    position: {top: 0, left: 0}\n         *  }\n         * ```\n         */\n        onStop: _react.PropTypes.func,\n\n        /**\n         * A workaround option which can be passed if onMouseDown needs to be accessed,\n         * since it'll always be blocked (due to that there's internal use of onMouseDown)\n         */\n        onMouseDown: _react.PropTypes.func,\n\n        /**\n         * These properties should be defined on the child, not here.\n         */\n        className: _shims.dontSetMe,\n        style: _shims.dontSetMe,\n        transform: _shims.dontSetMe\n      };\n      DraggableCore.defaultProps = {\n        allowAnyClick: false,\n        // by default only accept left click\n        cancel: null,\n        disabled: false,\n        enableUserSelectHack: true,\n        handle: null,\n        grid: null,\n        transform: null,\n        onStart: function onStart() {},\n        onDrag: function onDrag() {},\n        onStop: function onStop() {},\n        onMouseDown: function onMouseDown() {}\n      };\n      exports.default = DraggableCore;\n      /***/\n    },\n    /* 10 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = log;\n\n      function log() {\n        var _console;\n\n        if (undefined) (_console = console).log.apply(_console, arguments);\n      }\n      /***/\n\n    }\n    /******/\n    ])\n  );\n});\n\n;","map":{"version":3,"sources":["../webpack/universalModuleDefinition","../webpack/bootstrap 395e2cbbbb92f873ce73","../index.js","../lib/Draggable.es6","../external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"React\"}","../~/classnames/index.js","../lib/utils/domFns.es6","../lib/utils/shims.es6","../lib/utils/getPrefix.es6","../lib/utils/positionFns.es6","../lib/DraggableCore.es6","../lib/utils/log.es6"],"names":["module","Draggable","Component","displayName","propTypes","axis","bounds","left","right","top","bottom","Number","start","x","y","number","zIndex","className","style","transform","defaultProps","NaN","state","dragging","dragged","clientX","clientY","slackX","slackY","isElementSVG","next","onDragStart","coreEvent","shouldStart","onDrag","uiEvent","newState","shouldUpdate","onDragStop","shouldStop","svgTransform","transformOpts","isNaN","matchesSelectorFunc","matchesSelector","el","addEvent","removeEvent","outerHeight","height","node","computedStyle","window","outerWidth","width","innerHeight","innerWidth","createCSSTransform","createSVGTransform","userSelectPrefix","userSelect","userSelectStyle","addUserSelectStyles","document","removeUserSelectStyles","styleHacks","childStyle","touchAction","createCoreEvent","draggable","isStart","position","deltaX","deltaY","lastX","lastY","createUIEvent","findInArray","i","length","array","callback","isFunction","Object","isNum","int","parseInt","dontSetMe","props","prefixes","getPrefix","prop","browserPrefixToStyle","browserPrefixToKey","prefix","kebabToTitleCase","out","shouldCapitalize","str","getBoundPosition","cloneBounds","boundNode","nodeStyle","boundNodeStyle","offsetTop","Math","snapToGrid","pendingX","grid","pendingY","canDragX","canDragY","getControlPosition","e","eventsFor","touch","move","stop","mouse","dragEventFor","DraggableCore","allowAnyClick","disabled","enableUserSelectHack","handle","cancel","onStart","onStop","onMouseDown","handleDragStart","touchIdentifier","scrollX","scrollY","scrollTop","handleDrag","Array","handleDragStop","handleScroll","s","onMouseUp","onTouchStart","onTouchEnd","log"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactDraggable\"] = factory(require(\"react\"), require(\"react-dom\"));\n\telse\n\t\troot[\"ReactDraggable\"] = factory(root[\"React\"], root[\"ReactDOM\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 395e2cbbbb92f873ce73","module.exports = require('./lib/Draggable').default;\nmodule.exports.DraggableCore = require('./lib/DraggableCore').default;\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","// @flow\nimport {default as React, PropTypes} from 'react';\nimport ReactDOM from 'react-dom';\n// $FlowIgnore\nimport classNames from 'classnames';\nimport {createUIEvent, createCSSTransform, createSVGTransform} from './utils/domFns';\nimport {canDragX, canDragY, getBoundPosition} from './utils/positionFns';\nimport {dontSetMe} from './utils/shims';\nimport DraggableCore from './DraggableCore';\nimport log from './utils/log';\n\nimport type {CoreEvent} from './utils/domFns';\nexport type CoreEventHandler = (e: Event, coreEvent: CoreEvent) => void | false;\nexport type DraggableState = {\n  dragging: boolean,\n  dragged: boolean,\n  clientX: number, clientY: number,\n  slackX: number, slackY: number,\n  isElementSVG: boolean\n};\n\n//\n// Define <Draggable>\n//\n\nexport default class Draggable extends React.Component {\n\n  static displayName = 'Draggable';\n\n  static propTypes = {\n    // Accepts all props <DraggableCore> accepts.\n    ...DraggableCore.propTypes,\n\n    /**\n     * `axis` determines which axis the draggable can move.\n     *\n     *  Note that all callbacks will still return data as normal. This only\n     *  controls flushing to the DOM.\n     *\n     * 'both' allows movement horizontally and vertically.\n     * 'x' limits movement to horizontal axis.\n     * 'y' limits movement to vertical axis.\n     * 'none' limits all movement.\n     *\n     * Defaults to 'both'.\n     */\n    axis: PropTypes.oneOf(['both', 'x', 'y', 'none']),\n\n    /**\n     * `bounds` determines the range of movement available to the element.\n     * Available values are:\n     *\n     * 'parent' restricts movement within the Draggable's parent node.\n     *\n     * Alternatively, pass an object with the following properties, all of which are optional:\n     *\n     * {left: LEFT_BOUND, right: RIGHT_BOUND, bottom: BOTTOM_BOUND, top: TOP_BOUND}\n     *\n     * All values are in px.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *         return (\n     *            <Draggable bounds={{right: 300, bottom: 300}}>\n     *              <div>Content</div>\n     *           </Draggable>\n     *         );\n     *       }\n     *   });\n     * ```\n     */\n    bounds: PropTypes.oneOfType([\n      PropTypes.shape({\n        left: PropTypes.Number,\n        right: PropTypes.Number,\n        top: PropTypes.Number,\n        bottom: PropTypes.Number\n      }),\n      PropTypes.string,\n      PropTypes.oneOf([false])\n    ]),\n\n    /**\n     * `start` specifies the x and y that the dragged item should start at\n     *\n     * Example:\n     *\n     * ```jsx\n     *      let App = React.createClass({\n     *          render: function () {\n     *              return (\n     *                  <Draggable start={{x: 25, y: 25}}>\n     *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n     *                  </Draggable>\n     *              );\n     *          }\n     *      });\n     * ```\n     */\n    start: PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number\n    }),\n\n    /**\n     * `zIndex` specifies the zIndex to use while dragging.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *           return (\n     *               <Draggable zIndex={100}>\n     *                   <div>I have a zIndex</div>\n     *               </Draggable>\n     *           );\n     *       }\n     *   });\n     * ```\n     */\n    zIndex: PropTypes.number,\n\n    /**\n     * These properties should be defined on the child, not here.\n     */\n    className: dontSetMe,\n    style: dontSetMe,\n    transform: dontSetMe\n  };\n\n  static defaultProps = {\n    ...DraggableCore.defaultProps,\n    axis: 'both',\n    bounds: false,\n    start: {x: 0, y: 0},\n    zIndex: NaN,\n    x: 0,\n    y: 0\n  };\n\n  state: DraggableState = {\n    // Whether or not we are currently dragging.\n    dragging: false,\n\n    // Whether or not we have been dragged before.\n    dragged: false,\n\n    // Current transform x and y.\n    clientX: this.props.start.x, clientY: this.props.start.y,\n\n    // Used for compensating for out-of-bounds drags\n    slackX: 0, slackY: 0,\n\n    // Can only determine if SVG after mounting\n    isElementSVG: false\n  };\n\n  componentDidMount() {\n    // Check to see if the element passed is an instanceof SVGElement\n    if(ReactDOM.findDOMNode(this) instanceof SVGElement) {\n      this.setState({ isElementSVG: true });\n    }\n  }\n\n  componentWillUnmount() {\n    this.setState({dragging: false}); // prevents invariant if unmounted while dragging\n  }\n\n  componentWillReceiveProps(next) {\n    let { clientX, clientY } = this.state;\n    if (next.x !== clientX　|| next.y !== clientY) {\n      [clientX, clientY] = getBoundPosition(this, next.x, next.y);\n      this.setState({ clientX, clientY });\n    }\n  }\n\n  onDragStart: CoreEventHandler = (e, coreEvent) => {\n    log('Draggable: onDragStart: %j', coreEvent.position);\n\n    // Short-circuit if user's callback killed it.\n    let shouldStart = this.props.onStart(e, createUIEvent(this, coreEvent));\n    // Kills start event on core as well, so move handlers are never bound.\n    if (shouldStart === false) return false;\n\n    this.setState({dragging: true, dragged: true});\n  };\n\n  onDrag: CoreEventHandler = (e, coreEvent) => {\n    if (!this.state.dragging) return false;\n    log('Draggable: onDrag: %j', coreEvent.position);\n\n    let uiEvent = createUIEvent(this, coreEvent);\n\n    let newState = {\n      clientX: uiEvent.position.left,\n      clientY: uiEvent.position.top\n    };\n\n    // Keep within bounds.\n    if (this.props.bounds) {\n      // Save original x and y.\n      let {clientX, clientY} = newState;\n\n      // Add slack to the values used to calculate bound position. This will ensure that if\n      // we start removing slack, the element won't react to it right away until it's been\n      // completely removed.\n      newState.clientX += this.state.slackX;\n      newState.clientY += this.state.slackY;\n\n      // Get bound position. This will ceil/floor the x and y within the boundaries.\n      [newState.clientX, newState.clientY] = getBoundPosition(this, newState.clientX, newState.clientY);\n\n      // Recalculate slack by noting how much was shaved by the boundPosition handler.\n      newState.slackX = this.state.slackX + (clientX - newState.clientX);\n      newState.slackY = this.state.slackY + (clientY - newState.clientY);\n\n      // Update the event we fire to reflect what really happened after bounds took effect.\n      uiEvent.position.left = clientX;\n      uiEvent.position.top = clientY;\n      uiEvent.deltaX = newState.clientX - this.state.clientX;\n      uiEvent.deltaY = newState.clientY - this.state.clientY;\n    }\n\n    // Short-circuit if user's callback killed it.\n    let shouldUpdate = this.props.onDrag(e, uiEvent);\n    if (shouldUpdate === false) return false;\n\n    this.setState(newState);\n  };\n\n  onDragStop: CoreEventHandler = (e, coreEvent) => {\n    if (!this.state.dragging) return false;\n\n    // Short-circuit if user's callback killed it.\n    let shouldStop = this.props.onStop(e, createUIEvent(this, coreEvent));\n    if (shouldStop === false) return false;\n\n    log('Draggable: onDragStop: %j', coreEvent.position);\n\n    this.setState({\n      dragging: false,\n      slackX: 0,\n      slackY: 0\n    });\n  };\n\n  render(): React.Element {\n    let style = {}, svgTransform = null;\n\n    // Add a CSS transform to move the element around. This allows us to move the element around\n    // without worrying about whether or not it is relatively or absolutely positioned.\n    // If the item you are dragging already has a transform set, wrap it in a <span> so <Draggable>\n    // has a clean slate.\n    const transformOpts = {\n      // Set left if horizontal drag is enabled\n      x: (canDragX(this) ?\n         this.state.clientX :\n         this.props.start.x),\n \n      // Set top if vertical drag is enabled\n      y: (canDragY(this) ?\n         this.state.clientY :\n         this.props.start.y)\n    };\n\n    // If this element was SVG, we use the `transform` attribute.\n    if (this.state.isElementSVG) {\n      svgTransform = createSVGTransform(transformOpts);\n    } else {\n      style = createCSSTransform(transformOpts);\n    }\n\n    // zIndex option\n    if (this.state.dragging && !isNaN(this.props.zIndex)) {\n      style.zIndex = this.props.zIndex;\n    }\n\n    // Mark with class while dragging\n    let className = classNames((this.props.children.props.className || ''), 'react-draggable', {\n      'react-draggable-dragging': this.state.dragging,\n      'react-draggable-dragged': this.state.dragged\n    });\n\n    // Reuse the child provided\n    // This makes it flexible to use whatever element is wanted (div, ul, etc)\n    return (\n      <DraggableCore {...this.props} onStart={this.onDragStart} onDrag={this.onDrag} onStop={this.onDragStop}>\n        {React.cloneElement(React.Children.only(this.props.children), {\n          className: className,\n          style: {...this.props.children.props.style, ...style},\n          transform: svgTransform\n        })}\n      </DraggableCore>\n    );\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Draggable.es6","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"React\"}\n// module id = 2\n// module chunks = 0","/*!\n  Copyright (c) 2016 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/classnames/index.js\n// module id = 4\n// module chunks = 0","// @flow\nimport {findInArray, isFunction, isNum, int} from './shims';\nimport browserPrefix, {getPrefix, browserPrefixToStyle, browserPrefixToKey} from './getPrefix';\nimport ReactDOM from 'react-dom';\n\nimport type Draggable from '../Draggable';\nimport type DraggableCore from '../DraggableCore';\n\nexport type CoreEvent = {\n  node: HTMLElement,\n  position: {\n    deltaX: number, deltaY: number,\n    lastX: number, lastY: number,\n    clientX: number, clientY: number\n  }\n};\n\nexport type UIEvent = {\n  node: HTMLElement,\n  position: {\n    left: number, top: number\n  },\n  deltaX: number, deltaY: number\n};\n\nlet matchesSelectorFunc = '';\nexport function matchesSelector(el: HTMLElement, selector: string): boolean {\n  if (!matchesSelectorFunc) {\n    matchesSelectorFunc = findInArray([\n      'matches',\n      'webkitMatchesSelector',\n      'mozMatchesSelector',\n      'msMatchesSelector',\n      'oMatchesSelector'\n    ], function(method){\n      // $FlowIgnore: Doesn't think elements are indexable\n      return isFunction(el[method]);\n    });\n  }\n\n  // $FlowIgnore: Doesn't think elements are indexable\n  return el[matchesSelectorFunc].call(el, selector);\n}\n\nexport function addEvent(el: ?Node, event: string, handler: Function): void {\n  if (!el) { return; }\n  if (el.attachEvent) {\n    el.attachEvent('on' + event, handler);\n  } else if (el.addEventListener) {\n    el.addEventListener(event, handler, true);\n  } else {\n    // $FlowIgnore: Doesn't think elements are indexable\n    el['on' + event] = handler;\n  }\n}\n\nexport function removeEvent(el: ?Node, event: string, handler: Function): void {\n  if (!el) { return; }\n  if (el.detachEvent) {\n    el.detachEvent('on' + event, handler);\n  } else if (el.removeEventListener) {\n    el.removeEventListener(event, handler, true);\n  } else {\n    // $FlowIgnore: Doesn't think elements are indexable\n    el['on' + event] = null;\n  }\n}\n\nexport function outerHeight(node: HTMLElement): number {\n  // This is deliberately excluding margin for our calculations, since we are using\n  // offsetTop which is including margin. See getBoundPosition\n  let height = node.clientHeight;\n  let computedStyle = window.getComputedStyle(node);\n  height += int(computedStyle.borderTopWidth);\n  height += int(computedStyle.borderBottomWidth);\n  return height;\n}\n\nexport function outerWidth(node: HTMLElement): number {\n  // This is deliberately excluding margin for our calculations, since we are using\n  // offsetLeft which is including margin. See getBoundPosition\n  let width = node.clientWidth;\n  let computedStyle = window.getComputedStyle(node);\n  width += int(computedStyle.borderLeftWidth);\n  width += int(computedStyle.borderRightWidth);\n  return width;\n}\nexport function innerHeight(node: HTMLElement): number {\n  let height = node.clientHeight;\n  let computedStyle = window.getComputedStyle(node);\n  height -= int(computedStyle.paddingTop);\n  height -= int(computedStyle.paddingBottom);\n  return height;\n}\n\nexport function innerWidth(node: HTMLElement): number {\n  let width = node.clientWidth;\n  let computedStyle = window.getComputedStyle(node);\n  width -= int(computedStyle.paddingLeft);\n  width -= int(computedStyle.paddingRight);\n  return width;\n}\n\nexport function createCSSTransform({x, y}: {x: number, y: number}): Object {\n  // Replace unitless items with px\n  return {[browserPrefixToKey('transform', browserPrefix)]: 'translate(' + x + 'px,' + y + 'px)'};\n}\n\nexport function createSVGTransform({x, y}: {x: number, y: number}): string {\n  return 'translate(' + x + ',' + y + ')';\n}\n\n// User-select Hacks:\n//\n// Useful for preventing blue highlights all over everything when dragging.\nconst userSelectPrefix = getPrefix('user-select');\nconst userSelect = browserPrefixToStyle('user-select', userSelectPrefix);\nconst userSelectStyle = `;${userSelect}: none;`;\n\nexport function addUserSelectStyles() {\n  let style = document.body.getAttribute('style') || '';\n  document.body.setAttribute('style', style + userSelectStyle);\n}\n\nexport function removeUserSelectStyles() {\n  let style = document.body.getAttribute('style') || '';\n  document.body.setAttribute('style', style.replace(userSelectStyle, ''));\n}\n\nexport function styleHacks(childStyle: Object = {}): Object {\n  // Workaround IE pointer events; see #51\n  // https://github.com/mzabriskie/react-draggable/issues/51#issuecomment-103488278\n  return {\n    touchAction: 'none',\n    ...childStyle\n  };\n}\n\n// Create an event exposed by <DraggableCore>\nexport function createCoreEvent(draggable: DraggableCore, clientX: number, clientY: number): CoreEvent {\n  // State changes are often (but not always!) async. We want the latest value.\n  let state = draggable._pendingState || draggable.state;\n  let isStart = !isNum(state.lastX);\n\n  return {\n    node: ReactDOM.findDOMNode(draggable),\n    position: isStart ?\n      // If this is our first move, use the clientX and clientY as last coords.\n      {\n        deltaX: 0, deltaY: 0,\n        lastX: clientX, lastY: clientY,\n        clientX: clientX, clientY: clientY\n      } :\n      // Otherwise calculate proper values.\n      {\n        deltaX: clientX - state.lastX, deltaY: clientY - state.lastY,\n        lastX: state.lastX, lastY: state.lastY,\n        clientX: clientX, clientY: clientY\n      }\n  };\n}\n\n// Create an event exposed by <Draggable>\nexport function createUIEvent(draggable: Draggable, coreEvent: CoreEvent): UIEvent {\n  return {\n    node: ReactDOM.findDOMNode(draggable),\n    position: {\n      left: draggable.state.clientX + coreEvent.position.deltaX,\n      top: draggable.state.clientY + coreEvent.position.deltaY\n    },\n    deltaX: coreEvent.position.deltaX,\n    deltaY: coreEvent.position.deltaY\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/domFns.es6","// @flow\n// @credits https://gist.github.com/rogozhnikoff/a43cfed27c41e4e68cdc\nexport function findInArray(array: Array<any>, callback: Function): any {\n  for (let i = 0, length = array.length; i < length; i++) {\n    if (callback.apply(callback, [array[i], i, array])) return array[i];\n  }\n}\n\nexport function isFunction(func: any): boolean {\n  return typeof func === 'function' || Object.prototype.toString.call(func) === '[object Function]';\n}\n\nexport function isNum(num: any): boolean {\n  return typeof num === 'number' && !isNaN(num);\n}\n\nexport function int(a: string): number {\n  return parseInt(a, 10);\n}\n\nexport function dontSetMe(props: Object, propName: string, componentName: string) {\n  if (props[propName]) {\n    throw new Error(`Invalid prop ${propName} passed to ${componentName} - do not set this, set it on the child.`);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/shims.es6","// @flow\nconst prefixes = ['Moz', 'Webkit', 'O', 'ms'];\nexport function getPrefix(prop: string='transform'): string {\n  // Checking specifically for 'window.document' is for pseudo-browser server-side\n  // environments that define 'window' as the global context.\n  // E.g. React-rails (see https://github.com/reactjs/react-rails/pull/84)\n  if (typeof window === 'undefined' || typeof window.document === 'undefined') return '';\n\n  const style = window.document.documentElement.style;\n\n  if (prop in style) return '';\n\n  for (let i = 0; i < prefixes.length; i++) {\n    if (browserPrefixToStyle(prop, prefixes[i]) in style) return prefixes[i];\n  }\n\n  return '';\n}\n\nexport function browserPrefixToKey(prop: string, prefix: string): string {\n  return prefix ? `${prefix}${kebabToTitleCase(prop)}` : prop;\n}\n\nexport function browserPrefixToStyle(prop: string, prefix: string): string {\n  return prefix ? `-${prefix.toLowerCase()}-${prop}` : prop;\n}\n\nfunction kebabToTitleCase(str: string): string {\n  let out = '';\n  let shouldCapitalize = true;\n  for (let i = 0; i < str.length; i++) {\n    if (shouldCapitalize) {\n      out += str[i].toUpperCase();\n      shouldCapitalize = false;\n    } else if (str[i] === '-') {\n      shouldCapitalize = true;\n    } else {\n      out += str[i];\n    }\n  }\n  return out;\n}\n\n// Default export is the prefix itself, like 'Moz', 'Webkit', etc\n// Note that you may have to re-test for certain things; for instance, Chrome 50\n// can handle unprefixed `transform`, but not unprefixed `user-select`\nexport default getPrefix();\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/getPrefix.es6","// @flow\nimport React from 'react';\nimport {isNum, int} from './shims';\nimport ReactDOM from 'react-dom';\nimport {innerWidth, innerHeight, outerWidth, outerHeight} from './domFns';\n\nimport type Draggable from '../Draggable';\nexport type ControlPosition = {\n  clientX: number, clientY: number\n};\nexport type Bounds = {\n  left: number, top: number, right: number, bottom: number\n};\n\nexport function getBoundPosition(draggable: Draggable, clientX: number, clientY: number): [number, number] {\n  // If no bounds, short-circuit and move on\n  if (!draggable.props.bounds) return [clientX, clientY];\n\n  // Clone new bounds\n  let {bounds} = draggable.props;\n  bounds = typeof bounds === 'string' ? bounds : cloneBounds(bounds);\n  let node = ReactDOM.findDOMNode(draggable);\n\n  if (typeof bounds === 'string') {\n    let boundNode;\n    if (bounds === 'parent') {\n      boundNode = node.parentNode;\n    } else {\n      boundNode = document.querySelector(bounds);\n      if (!boundNode) throw new Error('Bounds selector \"' + bounds + '\" could not find an element.');\n    }\n    let nodeStyle = window.getComputedStyle(node);\n    let boundNodeStyle = window.getComputedStyle(boundNode);\n    // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.\n    bounds = {\n      left: -node.offsetLeft + int(boundNodeStyle.paddingLeft) +\n            int(nodeStyle.borderLeftWidth) + int(nodeStyle.marginLeft),\n      top: -node.offsetTop + int(boundNodeStyle.paddingTop) +\n            int(nodeStyle.borderTopWidth) + int(nodeStyle.marginTop),\n      right: innerWidth(boundNode) - outerWidth(node) - node.offsetLeft,\n      bottom: innerHeight(boundNode) - outerHeight(node) - node.offsetTop\n    };\n  }\n\n  // Keep x and y below right and bottom limits...\n  if (isNum(bounds.right)) clientX = Math.min(clientX, bounds.right);\n  if (isNum(bounds.bottom)) clientY = Math.min(clientY, bounds.bottom);\n\n  // But above left and top limits.\n  if (isNum(bounds.left)) clientX = Math.max(clientX, bounds.left);\n  if (isNum(bounds.top)) clientY = Math.max(clientY, bounds.top);\n\n  return [clientX, clientY];\n}\n\nexport function snapToGrid(grid: [number, number], pendingX: number, pendingY: number): [number, number] {\n  let x = Math.round(pendingX / grid[0]) * grid[0];\n  let y = Math.round(pendingY / grid[1]) * grid[1];\n  return [x, y];\n}\n\nexport function canDragX(draggable: React.Component): boolean {\n  return draggable.props.axis === 'both' || draggable.props.axis === 'x';\n}\n\nexport function canDragY(draggable: React.Component): boolean {\n  return draggable.props.axis === 'both' || draggable.props.axis === 'y';\n}\n\n// Get {clientX, clientY} positions from event.\nexport function getControlPosition(e: Event): ControlPosition {\n  let position = (e.targetTouches && e.targetTouches[0]) ||\n    e.changedTouches && e.changedTouches[0] || e;\n\n  return {\n    clientX: position.clientX,\n    clientY: position.clientY\n  };\n}\n\n// A lot faster than stringify/parse\nfunction cloneBounds(bounds: Bounds): Bounds {\n  return {\n    left: bounds.left,\n    top: bounds.top,\n    right: bounds.right,\n    bottom: bounds.bottom\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/positionFns.es6","// @flow\nimport {default as React, PropTypes} from 'react';\nimport {matchesSelector, createCoreEvent, addEvent, removeEvent, addUserSelectStyles,\n        removeUserSelectStyles, styleHacks} from './utils/domFns';\nimport {getControlPosition, snapToGrid} from './utils/positionFns';\nimport {dontSetMe} from './utils/shims';\nimport log from './utils/log';\n\n// Simple abstraction for dragging events names.\nconst eventsFor = {\n  touch: {\n    start: 'touchstart',\n    move: 'touchmove',\n    stop: 'touchend'\n  },\n  mouse: {\n    start: 'mousedown',\n    move: 'mousemove',\n    stop: 'mouseup'\n  }\n};\n\n// Default to mouse events.\nlet dragEventFor = eventsFor.mouse;\n\ntype EventHandler = (e: Event) => void;\ntype CoreState = {\n  dragging: boolean,\n  lastX: ?number,\n  lastY: ?number\n};\n\n//\n// Define <DraggableCore>.\n//\n// <DraggableCore> is for advanced usage of <Draggable>. It maintains minimal internal state so it can\n// work well with libraries that require more control over the element.\n//\n\nexport default class DraggableCore extends React.Component {\n\n  static displayName = 'DraggableCore';\n\n  static propTypes = {\n    /**\n     * `allowAnyClick` allows dragging using any mouse button.\n     * By default, we only accept the left button.\n     *\n     * Defaults to `false`.\n     */\n    allowAnyClick: PropTypes.bool,\n\n    /**\n     * `disabled`, if true, stops the <Draggable> from dragging. All handlers,\n     * with the exception of `onMouseDown`, will not fire.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *           return (\n     *               <Draggable disabled={true}>\n     *                   <div>I can't be dragged</div>\n     *               </Draggable>\n     *           );\n     *       }\n     *   });\n     * ```\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * By default, we add 'user-select:none' attributes to the document body\n     * to prevent ugly text selection during drag. If this is causing problems\n     * for your app, set this to `false`.\n     */\n    enableUserSelectHack: PropTypes.bool,\n\n    /**\n     * `grid` specifies the x and y that dragging should snap to.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *           return (\n     *               <Draggable grid={[25, 25]}>\n     *                   <div>I snap to a 25 x 25 grid</div>\n     *               </Draggable>\n     *           );\n     *       }\n     *   });\n     * ```\n     */\n    grid: PropTypes.arrayOf(PropTypes.number),\n\n    /**\n     * `handle` specifies a selector to be used as the handle that initiates drag.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *         return (\n     *            <Draggable handle=\".handle\">\n     *              <div>\n     *                  <div className=\"handle\">Click me to drag</div>\n     *                  <div>This is some other content</div>\n     *              </div>\n     *           </Draggable>\n     *         );\n     *       }\n     *   });\n     * ```\n     */\n    handle: PropTypes.string,\n\n    /**\n     * `cancel` specifies a selector to be used to prevent drag initialization.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *           return(\n     *               <Draggable cancel=\".cancel\">\n     *                   <div>\n     *                     <div className=\"cancel\">You can't drag from here</div>\n     *            <div>Dragging here works fine</div>\n     *                   </div>\n     *               </Draggable>\n     *           );\n     *       }\n     *   });\n     * ```\n     */\n    cancel: PropTypes.string,\n\n    /**\n     * Called when dragging starts.\n     * If this function returns the boolean false, dragging will be canceled.\n     *\n     * Example:\n     *\n     * ```js\n     *  function (event, ui) {}\n     * ```\n     *\n     * `event` is the Event that was triggered.\n     * `ui` is an object:\n     *\n     * ```js\n     *  {\n     *    position: {top: 0, left: 0}\n     *  }\n     * ```\n     */\n    onStart: PropTypes.func,\n\n    /**\n     * Called while dragging.\n     * If this function returns the boolean false, dragging will be canceled.\n     *\n     * Example:\n     *\n     * ```js\n     *  function (event, ui) {}\n     * ```\n     *\n     * `event` is the Event that was triggered.\n     * `ui` is an object:\n     *\n     * ```js\n     *  {\n     *    position: {top: 0, left: 0}\n     *  }\n     * ```\n     */\n    onDrag: PropTypes.func,\n\n    /**\n     * Called when dragging stops.\n     *\n     * Example:\n     *\n     * ```js\n     *  function (event, ui) {}\n     * ```\n     *\n     * `event` is the Event that was triggered.\n     * `ui` is an object:\n     *\n     * ```js\n     *  {\n     *    position: {top: 0, left: 0}\n     *  }\n     * ```\n     */\n    onStop: PropTypes.func,\n\n    /**\n     * A workaround option which can be passed if onMouseDown needs to be accessed,\n     * since it'll always be blocked (due to that there's internal use of onMouseDown)\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * These properties should be defined on the child, not here.\n     */\n    className: dontSetMe,\n    style: dontSetMe,\n    transform: dontSetMe\n  };\n\n  static defaultProps = {\n    allowAnyClick: false, // by default only accept left click\n    cancel: null,\n    disabled: false,\n    enableUserSelectHack: true,\n    handle: null,\n    grid: null,\n    transform: null,\n    onStart: function(){},\n    onDrag: function(){},\n    onStop: function(){},\n    onMouseDown: function(){}\n  };\n\n  state: CoreState = {\n    dragging: false,\n    // Used while dragging to determine deltas.\n    lastX: null, lastY: null\n  };\n\n  componentWillUnmount() {\n    // Remove any leftover event handlers. Remove both touch and mouse handlers in case\n    // some browser quirk caused a touch event to fire during a mouse move, or vice versa.\n    removeEvent(document, eventsFor.mouse.move, this.handleDrag);\n    removeEvent(document, eventsFor.touch.move, this.handleDrag);\n    removeEvent(document, eventsFor.mouse.stop, this.handleDragStop);\n    removeEvent(document, eventsFor.touch.stop, this.handleDragStop);\n    removeEvent(document, 'scroll', this.handleScroll);\n    if (this.props.enableUserSelectHack) removeUserSelectStyles();\n  }\n\n  handleDragStart: EventHandler = (e) => {\n    // Make it possible to attach event handlers on top of this one.\n    this.props.onMouseDown(e);\n\n    // Only accept left-clicks.\n    if (!this.props.allowAnyClick && typeof e.button === 'number' && e.button !== 0) return false;\n\n    // Short circuit if handle or cancel prop was provided and selector doesn't match.\n    if (this.props.disabled ||\n      (this.props.handle && !matchesSelector(e.target, this.props.handle)) ||\n      (this.props.cancel && matchesSelector(e.target, this.props.cancel))) {\n      return;\n    }\n\n    // Set touch identifier in component state if this is a touch event. This allows us to\n    // distinguish between individual touches on multitouch screens by identifying which\n    // touchpoint was set to this element.\n    if (e.targetTouches){\n      this.setState({touchIdentifier: e.targetTouches[0].identifier});\n    }\n\n    // Add a style to the body to disable user-select. This prevents text from\n    // being selected all over the page.\n    if (this.props.enableUserSelectHack) addUserSelectStyles();\n\n    // Get the current drag point from the event. This is used as the offset.\n    let {clientX, clientY} = getControlPosition(e);\n\n    // Create an event object with all the data parents need to make a decision here.\n    let coreEvent = createCoreEvent(this, clientX, clientY);\n\n    log('DraggableCore: handleDragStart: %j', coreEvent.position);\n\n    // Call event handler. If it returns explicit false, cancel.\n    log('calling', this.props.onStart);\n    let shouldUpdate = this.props.onStart(e, coreEvent);\n    if (shouldUpdate === false) return;\n\n\n    // Initiate dragging. Set the current x and y as offsets\n    // so we know how much we've moved during the drag. This allows us\n    // to drag elements around even if they have been moved, without issue.\n    this.setState({\n      dragging: true,\n\n      lastX: clientX,\n      lastY: clientY,\n      // Stored so we can adjust our offset if scrolled.\n      scrollX: document.body.scrollLeft,\n      scrollY: document.body.scrollTop\n    });\n\n    // Translate el on page scroll.\n    addEvent(document, 'scroll', this.handleScroll);\n    // Add events to the document directly so we catch when the user's mouse/touch moves outside of\n    // this element. We use different events depending on whether or not we have detected that this\n    // is a touch-capable device.\n    addEvent(document, dragEventFor.move, this.handleDrag);\n    addEvent(document, dragEventFor.stop, this.handleDragStop);\n  };\n\n  handleDrag: EventHandler = (e) => {\n    // Return if this is a touch event, but not the correct one for this element\n    if (e.targetTouches && (e.targetTouches[0].identifier !== this.state.touchIdentifier)) return;\n    if (this.props.disabled) return;\n    let {clientX, clientY} = getControlPosition(e);\n\n    // Snap to grid if prop has been provided\n    if (Array.isArray(this.props.grid)) {\n      let deltaX = clientX - this.state.lastX, deltaY = clientY - this.state.lastY;\n      [deltaX, deltaY] = snapToGrid(this.props.grid, deltaX, deltaY);\n      if (!deltaX && !deltaY) return; // skip useless drag\n      clientX = this.state.lastX + deltaX, clientY = this.state.lastY + deltaY;\n    }\n\n    const coreEvent = createCoreEvent(this, clientX, clientY);\n\n    log('DraggableCore: handleDrag: %j', coreEvent.position);\n\n\n    // Call event handler. If it returns explicit false, trigger end.\n    const shouldUpdate = this.props.onDrag(e, coreEvent);\n    if (shouldUpdate === false) {\n      this.handleDragStop({});\n      return;\n    }\n\n    this.setState({\n      lastX: clientX,\n      lastY: clientY\n    });\n  };\n\n  handleDragStop: EventHandler = (e) => {\n    if (!this.state.dragging) return;\n\n    // Short circuit if this is not the correct touch event. `changedTouches` contains all\n    // touch points that have been removed from the surface.\n    if (e.changedTouches && (e.changedTouches[0].identifier !== this.state.touchIdentifier)) return;\n\n    // Remove user-select hack\n    if (this.props.enableUserSelectHack) removeUserSelectStyles();\n\n    let {clientX, clientY} = getControlPosition(e);\n    const coreEvent = createCoreEvent(this, clientX, clientY);\n\n    log('DraggableCore: handleDragStop: %j', coreEvent.position);\n\n    // Reset the el.\n    this.setState({\n      dragging: false,\n      lastX: null,\n      lastY: null\n    });\n\n    // Call event handler\n    this.props.onStop(e, coreEvent);\n\n    // Remove event handlers\n    log('DraggableCore: Removing handlers');\n    removeEvent(document, 'scroll', this.handleScroll);\n    removeEvent(document, dragEventFor.move, this.handleDrag);\n    removeEvent(document, dragEventFor.stop, this.handleDragStop);\n  };\n\n  // When the user scrolls, adjust internal state so the draggable moves along the page properly.\n  // This only fires when a drag is active.\n  handleScroll: EventHandler = (e) => {\n    const s = this.state, x = document.body.scrollLeft, y = document.body.scrollTop;\n\n    // Create the usual event, but make the scroll offset our deltas.\n    let coreEvent = createCoreEvent(this);\n    coreEvent.position.deltaX = x - s.scrollX;\n    coreEvent.position.deltaY = y - s.scrollY;\n\n    this.setState({\n      lastX: s.lastX + coreEvent.position.deltaX,\n      lastY: s.lastY + coreEvent.position.deltaY,\n      scrollX: x,\n      scrollY: y\n    });\n\n    this.props.onDrag(e, coreEvent);\n  };\n\n  onMouseDown: EventHandler = (e) => {\n    dragEventFor = eventsFor.mouse; // on touchscreen laptops we could switch back to mouse\n\n    return this.handleDragStart(e);\n  };\n\n  onMouseUp: EventHandler = (e) => {\n    dragEventFor = eventsFor.mouse;\n\n    return this.handleDragStop(e);\n  };\n\n  // Same as onMouseDown (start drag), but now consider this a touch device.\n  onTouchStart: EventHandler = (e) => {\n    // We're on a touch device now, so change the event handlers\n    dragEventFor = eventsFor.touch;\n\n    return this.handleDragStart(e);\n  };\n\n  onTouchEnd: EventHandler = (e) => {\n    // We're on a touch device now, so change the event handlers\n    dragEventFor = eventsFor.touch;\n\n    return this.handleDragStop(e);\n  };\n\n  render(): React.Element {\n    // Reuse the child provided\n    // This makes it flexible to use whatever element is wanted (div, ul, etc)\n    return React.cloneElement(React.Children.only(this.props.children), {\n      style: styleHacks(this.props.children.props.style),\n\n      // Note: mouseMove handler is attached to document so it will still function\n      // when the user drags quickly and leaves the bounds of the element.\n      onMouseDown: this.onMouseDown,\n      onTouchStart: this.onTouchStart,\n      onMouseUp: this.onMouseUp,\n      onTouchEnd: this.onTouchEnd\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/DraggableCore.es6","// @flow\nexport default function log(...args: any) {\n  if (process.env.DRAGGABLE_DEBUG) console.log(...args);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/log.es6"],"sourceRoot":""},"metadata":{},"sourceType":"script"}