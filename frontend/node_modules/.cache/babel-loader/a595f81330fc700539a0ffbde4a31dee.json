{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/pages/Playground.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport DancerCard from '../components/DancerCard/DancerCard';\nimport { Grid, Typography } from '@material-ui/core';\nimport RadioButtonsGroup from '../components/RadioButtonsGroup/RadioButtonsGroup';\nimport StartButton from '../components/Button/StartButton';\nimport { motion, AnimateSharedLayout } from 'framer-motion';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FlipMove from 'react-flip-move';\nimport { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport Button from '@material-ui/core/Button';\nimport BasicTable from '../components/BasicTable/BasicTable'; // import player1Image from '../images/Paula.png'\n// import player2Image from '../images/Cristian.png'\n// import player3Image from '../images/Claudia.png'\n\nimport classNames from 'classnames';\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n    paddingRight: 33\n  }\n}));\nconst socket = io('http://localhost:3000', {\n  transports: ['websocket', 'polling']\n});\n\nfunction Playground() {\n  _s();\n\n  const classes = useStyles();\n  const [danceMove, setDanceMove] = useState('Dab');\n  const [position, setPosition] = useState([1, 2, 3]);\n  const [testLog, setTestLog] = useState({\n    danceMove: 'Dab',\n    position1: 1,\n    position2: 2,\n    position3: 3\n  });\n  const [correctness, setCorrectness] = useState(false); // const [p1Position, setP1Position] = useState(1)\n  // const [p2Position, setP2Position] = useState(2)\n  // const [p3Position, setP3Position] = useState(3)\n  // const [p1DanceMove, setP1DanceMove] = useState('')\n  // const [p2DanceMove, setP2DanceMove] = useState('')\n  // const [p3DanceMove, setP3DanceMove] = useState('')\n\n  const [connection, setConnection] = useState(false);\n\n  const handleConnection = () => {\n    connection ? setConnection(false) : setConnection(true);\n  };\n\n  let [position1, position2, position3] = position;\n  let currentDanceMove = danceMove;\n  useEffect(() => {\n    if (connection) {\n      socket.on('new_data', newData => {\n        setDanceMove(newData.danceMove);\n        setPosition(newData.position);\n      });\n      socket.on('test_log', newData => {\n        setTestLog(newData);\n      }); // socket.on('new_data', (newData) => {\n      //   setDanceMove(newData.danceMove)\n      //   setPosition(newData.position)\n      // })\n      // socket.on('new_data', (newData) => {\n      //   setDanceMove(newData.danceMove)\n      //   setPosition(newData.position)\n      // })\n    } else {\n      socket.off('new_data');\n    }\n  }, [connection]);\n  useEffect(() => {\n    if (position1 === testLog.position1 && position2 === testLog.position2 && position3 === testLog.position3 && currentDanceMove === testLog.danceMove) {\n      setCorrectness(true);\n    } else {\n      setCorrectness(false);\n    }\n  });\n  console.log(position1);\n  console.log(position2);\n  console.log(position3);\n  console.log(testLog.position1);\n  console.log(testLog.position2);\n  console.log(testLog.position3);\n  console.log(currentDanceMove);\n  console.log(testLog.danceMove);\n  console.log(correctness);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(DancerCard, {\n          name: \"Paula\",\n          position: position[0],\n          userImage: \"6CgkUjUl4og\",\n          danceMove: danceMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(DancerCard, {\n          name: \"Robinson\",\n          position: position[1],\n          userImage: \"iFgRcqHznqg\",\n          danceMove: danceMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(DancerCard, {\n          name: \"Erik\",\n          position: position[2],\n          userImage: \"d2MSDujJl2g\",\n          danceMove: danceMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Test Log Received\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          justifyItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(BasicTable, {\n          danceMove: testLog.danceMove,\n          position1: testLog.position1,\n          position2: testLog.position2,\n          position3: testLog.position3,\n          correctness: correctness\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleConnection,\n          className: classes.margin,\n          children: connection ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"END\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"START\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Playground, \"IsJz7inPDAeNOZGpPreRKwj4tA0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Playground;\nexport default Playground;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playground\");","map":{"version":3,"sources":["/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/pages/Playground.js"],"names":["React","DancerCard","Grid","Typography","RadioButtonsGroup","StartButton","motion","AnimateSharedLayout","makeStyles","FlipMove","useEffect","useState","io","Button","BasicTable","classNames","useStyles","theme","margin","spacing","paddingRight","socket","transports","Playground","classes","danceMove","setDanceMove","position","setPosition","testLog","setTestLog","position1","position2","position3","correctness","setCorrectness","connection","setConnection","handleConnection","currentDanceMove","on","newData","off","console","log","justifyItems"],"mappings":"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","sourcesContent":["import React from 'react'\nimport DancerCard from '../components/DancerCard/DancerCard'\nimport { Grid, Typography } from '@material-ui/core'\nimport RadioButtonsGroup from '../components/RadioButtonsGroup/RadioButtonsGroup'\nimport StartButton from '../components/Button/StartButton'\nimport { motion, AnimateSharedLayout } from 'framer-motion'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FlipMove from 'react-flip-move'\nimport { useEffect, useState } from 'react'\nimport io from 'socket.io-client'\nimport Button from '@material-ui/core/Button'\nimport BasicTable from '../components/BasicTable/BasicTable'\n// import player1Image from '../images/Paula.png'\n// import player2Image from '../images/Cristian.png'\n// import player3Image from '../images/Claudia.png'\nimport classNames from 'classnames'\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n    paddingRight: 33,\n  },\n}))\n\nconst socket = io('http://localhost:3000', {\n  transports: ['websocket', 'polling'],\n})\n\nfunction Playground() {\n  const classes = useStyles()\n  const [danceMove, setDanceMove] = useState('Dab')\n  const [position, setPosition] = useState([1, 2, 3])\n  const [testLog, setTestLog] = useState({\n    danceMove: 'Dab',\n    position1: 1,\n    position2: 2,\n    position3: 3,\n  })\n  const [correctness, setCorrectness] = useState(false)\n  // const [p1Position, setP1Position] = useState(1)\n  // const [p2Position, setP2Position] = useState(2)\n  // const [p3Position, setP3Position] = useState(3)\n\n  // const [p1DanceMove, setP1DanceMove] = useState('')\n  // const [p2DanceMove, setP2DanceMove] = useState('')\n  // const [p3DanceMove, setP3DanceMove] = useState('')\n  const [connection, setConnection] = useState(false)\n\n  const handleConnection = () => {\n    connection ? setConnection(false) : setConnection(true)\n  }\n  let [position1, position2, position3] = position\n  let currentDanceMove = danceMove\n  useEffect(() => {\n    if (connection) {\n      socket.on('new_data', (newData) => {\n        setDanceMove(newData.danceMove)\n        setPosition(newData.position)\n      })\n      socket.on('test_log', (newData) => {\n        setTestLog(newData)\n      })\n\n      // socket.on('new_data', (newData) => {\n      //   setDanceMove(newData.danceMove)\n      //   setPosition(newData.position)\n      // })\n      // socket.on('new_data', (newData) => {\n      //   setDanceMove(newData.danceMove)\n      //   setPosition(newData.position)\n      // })\n    } else {\n      socket.off('new_data')\n    }\n  }, [connection])\n\n  useEffect(() => {\n    if (\n      position1 === testLog.position1 &&\n      position2 === testLog.position2 &&\n      position3 === testLog.position3 &&\n      currentDanceMove === testLog.danceMove\n    ) {\n      setCorrectness(true)\n    } else {\n      setCorrectness(false)\n    }\n  })\n  console.log(position1)\n  console.log(position2)\n  console.log(position3)\n  console.log(testLog.position1)\n  console.log(testLog.position2)\n  console.log(testLog.position3)\n  console.log(currentDanceMove)\n  console.log(testLog.danceMove)\n  console.log(correctness)\n\n  return (\n    <>\n      <Grid container justify='center'>\n        <Grid item>\n          <DancerCard\n            name='Paula'\n            position={position[0]}\n            userImage='6CgkUjUl4og'\n            danceMove={danceMove}\n          />\n        </Grid>\n\n        <Grid item>\n          <DancerCard\n            name='Robinson'\n            position={position[1]}\n            userImage='iFgRcqHznqg'\n            danceMove={danceMove}\n          />\n        </Grid>\n\n        <Grid item>\n          <DancerCard\n            name='Erik'\n            position={position[2]}\n            userImage='d2MSDujJl2g'\n            danceMove={danceMove}\n          />\n        </Grid>\n\n        {/* <AnimateSharedLayout>\n          <motion.div\n            drag\n            dragElastic={0.2}\n            dragMomentum={false}\n            layout\n            layoutId\n            className={classes.player1}\n          >\n            <DancerCard name='Jack' status='Ready' />\n          </motion.div>\n\n          <motion.div\n            drag\n            dragElastic={0.2}\n            dragMomentum={false}\n            layout\n            layoutId\n            className={classes.player2}\n          >\n            <DancerCard name='Chris' status='Ready' />\n          </motion.div>\n\n          <motion.div\n            drag\n            dragElastic={0.2}\n            dragMomentum={false}\n            layout\n            layoutId\n            className={classes.player3}\n          >\n            <DancerCard name='Vincent' status='' />\n          </motion.div>\n        </AnimateSharedLayout> */}\n\n        <Typography variant='h3'>Test Log Received</Typography>\n\n        <Grid item style={{ justifyItems: 'center' }}>\n          <BasicTable\n            danceMove={testLog.danceMove}\n            position1={testLog.position1}\n            position2={testLog.position2}\n            position3={testLog.position3}\n            correctness={correctness}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid container justify='center'>\n        <Grid item>\n          <Button\n            variant='contained'\n            color='secondary'\n            onClick={handleConnection}\n            className={classes.margin}\n          >\n            {connection ? <p>END</p> : <p>START</p>}\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default Playground\n"]},"metadata":{},"sourceType":"module"}