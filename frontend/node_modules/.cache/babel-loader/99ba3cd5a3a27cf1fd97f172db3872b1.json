{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/pages/Playground.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport DancerCard from '../components/DancerCard/DancerCard';\nimport { Grid, Typography } from '@material-ui/core';\nimport RadioButtonsGroup from '../components/RadioButtonsGroup/RadioButtonsGroup';\nimport StartButton from '../components/Button/StartButton';\nimport { motion, AnimateSharedLayout } from 'framer-motion';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FlipMove from 'react-flip-move';\nimport { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport Button from '@material-ui/core/Button';\nimport BasicTable from '../components/BasicTable/BasicTable';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport classNames from 'classnames';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Alert;\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n    paddingRight: 33\n  },\n  alert: {\n    width: '100%',\n    marginLeft: '120px'\n  }\n}));\nconst socket = io('http://localhost:3000', {\n  transports: ['websocket', 'polling']\n});\n\nfunction Playground() {\n  _s();\n\n  const classes = useStyles();\n  const [danceMove, setDanceMove] = useState('Dab');\n  const [position, setPosition] = useState([1, 2, 3]);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(true);\n  }; // const [testLog, setTestLog] = useState({\n  //   danceMove: 'Dab',\n  //   position1: 1,\n  //   position2: 2,\n  //   position3: 3,\n  // })\n\n\n  const [correctness, setCorrectness] = useState(false); // const [p1Position, setP1Position] = useState(1)\n  // const [p2Position, setP2Position] = useState(2)\n  // const [p3Position, setP3Position] = useState(3)\n  // const [p1DanceMove, setP1DanceMove] = useState('')\n  // const [p2DanceMove, setP2DanceMove] = useState('')\n  // const [p3DanceMove, setP3DanceMove] = useState('')\n\n  const [connection, setConnection] = useState(false);\n\n  const handleConnection = () => {\n    connection ? setConnection(false) : setConnection(true);\n    connection ? setOpen(true) : setOpen(false);\n  };\n\n  let [position1, position2, position3] = position;\n  let currentDanceMove = danceMove;\n  useEffect(() => {\n    if (connection) {\n      socket.on('new_data', newData => {\n        setDanceMove(newData.danceMove);\n        setPosition(newData.position);\n      }); // socket.on('test_log', (newData) => {\n      //   setTestLog(newData)\n      // })\n      // socket.on('new_data', (newData) => {\n      //   setDanceMove(newData.danceMove)\n      //   setPosition(newData.position)\n      // })\n      // socket.on('new_data', (newData) => {\n      //   setDanceMove(newData.danceMove)\n      //   setPosition(newData.position)\n      // })\n    } else {\n      socket.off('new_data');\n    }\n  }, [connection]); // useEffect(() => {\n  //   if (\n  //     position1 === testLog.position1 &&\n  //     position2 === testLog.position2 &&\n  //     position3 === testLog.position3 &&\n  //     currentDanceMove === testLog.danceMove\n  //   ) {\n  //     setCorrectness(true)\n  //   } else {\n  //     setCorrectness(false)\n  //   }\n  // })\n  // console.log(position1)\n  // console.log(position2)\n  // console.log(position3)\n  // console.log(testLog.position1)\n  // console.log(testLog.position2)\n  // console.log(testLog.position3)\n  // console.log(currentDanceMove)\n  // console.log(testLog.danceMove)\n  // console.log(correctness)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(DancerCard, {\n          name: \"Paula\",\n          position: position[0],\n          userImage: \"6CgkUjUl4og\",\n          danceMove: danceMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(DancerCard, {\n          name: \"Robinson\",\n          position: position[1],\n          userImage: \"sibVwORYqs0\",\n          danceMove: danceMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(DancerCard, {\n          name: \"Erik\",\n          position: position[2],\n          userImage: \"d2MSDujJl2g\",\n          danceMove: danceMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleConnection,\n          className: classes.margin,\n          children: connection ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"END\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"START\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n          open: open,\n          autoHideDuration: 3000,\n          onClose: handleClose,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            onClose: handleClose,\n            severity: \"success\",\n            className: classes.alert,\n            children: \"Let's Dance Dance !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Playground, \"f0ESO4fO+F83rcqVmD8ax1wCLGI=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Playground;\nexport default Playground;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"Playground\");","map":{"version":3,"sources":["/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/pages/Playground.js"],"names":["React","DancerCard","Grid","Typography","RadioButtonsGroup","StartButton","motion","AnimateSharedLayout","makeStyles","FlipMove","useEffect","useState","io","Button","BasicTable","Snackbar","classNames","MuiAlert","Alert","props","useStyles","theme","margin","spacing","paddingRight","alert","width","marginLeft","socket","transports","Playground","classes","danceMove","setDanceMove","position","setPosition","open","setOpen","handleClose","event","reason","correctness","setCorrectness","connection","setConnection","handleConnection","position1","position2","position3","currentDanceMove","on","newData","off"],"mappings":"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","sourcesContent":["import React from 'react'\nimport DancerCard from '../components/DancerCard/DancerCard'\nimport { Grid, Typography } from '@material-ui/core'\nimport RadioButtonsGroup from '../components/RadioButtonsGroup/RadioButtonsGroup'\nimport StartButton from '../components/Button/StartButton'\nimport { motion, AnimateSharedLayout } from 'framer-motion'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FlipMove from 'react-flip-move'\nimport { useEffect, useState } from 'react'\nimport io from 'socket.io-client'\nimport Button from '@material-ui/core/Button'\nimport BasicTable from '../components/BasicTable/BasicTable'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport classNames from 'classnames'\nimport MuiAlert from '@material-ui/lab/Alert'\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant='filled' {...props} />\n}\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n    paddingRight: 33,\n  },\n  alert: {\n    width: '100%',\n    marginLeft: '120px',\n  },\n}))\n\nconst socket = io('http://localhost:3000', {\n  transports: ['websocket', 'polling'],\n})\n\nfunction Playground() {\n  const classes = useStyles()\n  const [danceMove, setDanceMove] = useState('Dab')\n  const [position, setPosition] = useState([1, 2, 3])\n\n  const [open, setOpen] = React.useState(false)\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    setOpen(true)\n  }\n  // const [testLog, setTestLog] = useState({\n  //   danceMove: 'Dab',\n  //   position1: 1,\n  //   position2: 2,\n  //   position3: 3,\n  // })\n  const [correctness, setCorrectness] = useState(false)\n  // const [p1Position, setP1Position] = useState(1)\n  // const [p2Position, setP2Position] = useState(2)\n  // const [p3Position, setP3Position] = useState(3)\n\n  // const [p1DanceMove, setP1DanceMove] = useState('')\n  // const [p2DanceMove, setP2DanceMove] = useState('')\n  // const [p3DanceMove, setP3DanceMove] = useState('')\n  const [connection, setConnection] = useState(false)\n\n  const handleConnection = () => {\n    connection ? setConnection(false) : setConnection(true)\n    connection ? setOpen(true) : setOpen(false)\n  }\n  let [position1, position2, position3] = position\n  let currentDanceMove = danceMove\n  useEffect(() => {\n    if (connection) {\n      socket.on('new_data', (newData) => {\n        setDanceMove(newData.danceMove)\n        setPosition(newData.position)\n      })\n      // socket.on('test_log', (newData) => {\n      //   setTestLog(newData)\n      // })\n\n      // socket.on('new_data', (newData) => {\n      //   setDanceMove(newData.danceMove)\n      //   setPosition(newData.position)\n      // })\n      // socket.on('new_data', (newData) => {\n      //   setDanceMove(newData.danceMove)\n      //   setPosition(newData.position)\n      // })\n    } else {\n      socket.off('new_data')\n    }\n  }, [connection])\n\n  // useEffect(() => {\n  //   if (\n  //     position1 === testLog.position1 &&\n  //     position2 === testLog.position2 &&\n  //     position3 === testLog.position3 &&\n  //     currentDanceMove === testLog.danceMove\n  //   ) {\n  //     setCorrectness(true)\n  //   } else {\n  //     setCorrectness(false)\n  //   }\n  // })\n  // console.log(position1)\n  // console.log(position2)\n  // console.log(position3)\n  // console.log(testLog.position1)\n  // console.log(testLog.position2)\n  // console.log(testLog.position3)\n  // console.log(currentDanceMove)\n  // console.log(testLog.danceMove)\n  // console.log(correctness)\n\n  return (\n    <>\n      <Grid container justify='center'>\n        <Grid item>\n          <DancerCard\n            name='Paula'\n            position={position[0]}\n            userImage='6CgkUjUl4og'\n            danceMove={danceMove}\n          />\n        </Grid>\n\n        <Grid item>\n          <DancerCard\n            name='Robinson'\n            position={position[1]}\n            userImage='sibVwORYqs0'\n            danceMove={danceMove}\n          />\n        </Grid>\n\n        <Grid item>\n          <DancerCard\n            name='Erik'\n            position={position[2]}\n            userImage='d2MSDujJl2g'\n            danceMove={danceMove}\n          />\n        </Grid>\n\n        {/* <AnimateSharedLayout>\n          <motion.div\n            drag\n            dragElastic={0.2}\n            dragMomentum={false}\n            layout\n            layoutId\n            className={classes.player1}\n          >\n            <DancerCard name='Jack' status='Ready' />\n          </motion.div>\n\n          <motion.div\n            drag\n            dragElastic={0.2}\n            dragMomentum={false}\n            layout\n            layoutId\n            className={classes.player2}\n          >\n            <DancerCard name='Chris' status='Ready' />\n          </motion.div>\n\n          <motion.div\n            drag\n            dragElastic={0.2}\n            dragMomentum={false}\n            layout\n            layoutId\n            className={classes.player3}\n          >\n            <DancerCard name='Vincent' status='' />\n          </motion.div>\n        </AnimateSharedLayout> */}\n\n        {/* <Typography variant='h3'>Test Log Received</Typography>\n\n        <Grid item style={{ justifyItems: 'center' }}>\n          <BasicTable\n            danceMove={testLog.danceMove}\n            position1={testLog.position1}\n            position2={testLog.position2}\n            position3={testLog.position3}\n            correctness={correctness}\n          />\n        </Grid> */}\n      </Grid>\n\n      <Grid container justify='center'>\n        <Grid item>\n          <Button\n            variant='contained'\n            color='secondary'\n            onClick={handleConnection}\n            className={classes.margin}\n          >\n            {connection ? <p>END</p> : <p>START</p>}\n          </Button>\n\n          <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n            <Alert\n              onClose={handleClose}\n              severity='success'\n              className={classes.alert}\n            >\n              Let's Dance Dance !\n            </Alert>\n          </Snackbar>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default Playground\n"]},"metadata":{},"sourceType":"module"}