{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/InputAdornments/InputAdornments.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginTop: '100px'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: '70ch'\n  }\n}));\nexport default function InputAdornments() {\n  _s();\n\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: clsx(classes.margin, classes.textField),\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"outlined-adornment-password\",\n          children: \"Enter your developer password here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          fullWidth: true,\n          id: \"outlined-adornment-password\",\n          type: values.showPassword ? 'text' : 'password',\n          value: values.password,\n          onChange: handleChange('password'),\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"toggle password visibility\",\n              onClick: handleClickShowPassword,\n              onMouseDown: handleMouseDownPassword,\n              edge: \"end\",\n              children: values.showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 42\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 59\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this),\n          labelWidth: 250\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputAdornments, \"iio89ULxSON5JoiC+Q8MDb8BD1g=\", false, function () {\n  return [useStyles];\n});\n\n_c = InputAdornments;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputAdornments\");","map":{"version":3,"sources":["/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/InputAdornments/InputAdornments.js"],"names":["React","clsx","makeStyles","IconButton","Input","FilledInput","OutlinedInput","InputLabel","InputAdornment","FormHelperText","FormControl","TextField","Visibility","VisibilityOff","useStyles","theme","root","display","flexWrap","justifyContent","marginTop","margin","spacing","withoutLabel","textField","width","InputAdornments","classes","values","setValues","useState","amount","password","weight","weightRange","showPassword","handleChange","prop","event","target","value","handleClickShowPassword","handleMouseDownPassword","preventDefault"],"mappings":"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","sourcesContent":["import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton'\nimport Input from '@material-ui/core/Input'\nimport FilledInput from '@material-ui/core/FilledInput'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport FormControl from '@material-ui/core/FormControl'\nimport TextField from '@material-ui/core/TextField'\nimport Visibility from '@material-ui/icons/Visibility'\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginTop: '100px',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: '70ch',\n  },\n}))\n\nexport default function InputAdornments() {\n  const classes = useStyles()\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  })\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword })\n  }\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault()\n  }\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <FormControl\n          className={clsx(classes.margin, classes.textField)}\n          variant='outlined'\n        >\n          <InputLabel htmlFor='outlined-adornment-password'>\n            Enter your developer password here\n          </InputLabel>\n          <OutlinedInput\n            fullWidth\n            id='outlined-adornment-password'\n            type={values.showPassword ? 'text' : 'password'}\n            value={values.password}\n            onChange={handleChange('password')}\n            endAdornment={\n              <InputAdornment position='end'>\n                <IconButton\n                  aria-label='toggle password visibility'\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                  edge='end'\n                >\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            }\n            labelWidth={250}\n          />\n        </FormControl>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}