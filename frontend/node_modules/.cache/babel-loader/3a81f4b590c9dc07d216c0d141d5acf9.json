{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/InputAdornments/InputAdornments.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CustomizedSnackbars from '../CustomizedSnackbars/CustomizedSnackbars';\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Alert;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginTop: '100px'\n  },\n  margin: {\n    margin: theme.spacing(1),\n    paddingRight: 33\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: '70ch'\n  },\n  button: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\nexport default function InputAdornments(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    access\n  } = props;\n  const [values, setValues] = React.useState({\n    password: '',\n    showPassword: false\n  });\n  const [accessStatus, setAccessStatus] = React.useState(true);\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setAccessStatus(true);\n  };\n\n  function handleSubmit(event) {\n    // event.preventDefault()\n    // console.log('Password: ', values.password)\n    // ..code to submit form to backend here...\n    axios.post('/authenticate/password', values).then(response => {\n      access(response.data);\n      setAccessStatus(response.data);\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          className: clsx(classes.margin, classes.textField),\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"outlined-adornment-password\",\n            children: \"Enter your developer password here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            fullWidth: true,\n            id: \"outlined-adornment-password\",\n            type: values.showPassword ? 'text' : 'password',\n            value: values.password,\n            onChange: handleChange('password'),\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: handleClickShowPassword,\n                onMouseDown: handleMouseDownPassword,\n                edge: \"end\",\n                children: values.showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 44\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 61\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this),\n            labelWidth: 260\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      className: classes.button,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        className: classes.margin,\n        onClick: handleSubmit,\n        type: \"submit\",\n        children: \"Request For Access\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: !accessStatus,\n        autoHideDuration: 3000,\n        onClose: handleClose,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleClose,\n          severity: \"warning\",\n          style: {\n            width: '100%'\n          },\n          children: \"Wrong Password!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(InputAdornments, \"INwMU5NhpWjzxg3g2b+om4vd5NE=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = InputAdornments;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"InputAdornments\");","map":{"version":3,"sources":["/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/InputAdornments/InputAdornments.js"],"names":["React","clsx","makeStyles","IconButton","Input","FilledInput","OutlinedInput","InputLabel","InputAdornment","FormHelperText","FormControl","TextField","Visibility","VisibilityOff","Button","axios","Snackbar","MuiAlert","CustomizedSnackbars","Alert","props","useStyles","theme","root","display","flexWrap","justifyContent","marginTop","margin","spacing","paddingRight","withoutLabel","textField","width","button","InputAdornments","classes","access","values","setValues","useState","password","showPassword","accessStatus","setAccessStatus","handleChange","prop","event","target","value","handleClickShowPassword","handleMouseDownPassword","preventDefault","handleClose","reason","handleSubmit","post","then","response","data","console","log","catch","error","textAlign"],"mappings":"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","sourcesContent":["import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton'\nimport Input from '@material-ui/core/Input'\nimport FilledInput from '@material-ui/core/FilledInput'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport FormControl from '@material-ui/core/FormControl'\nimport TextField from '@material-ui/core/TextField'\nimport Visibility from '@material-ui/icons/Visibility'\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nimport MuiAlert from '@material-ui/lab/Alert'\nimport CustomizedSnackbars from '../CustomizedSnackbars/CustomizedSnackbars'\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant='filled' {...props} />\n}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginTop: '100px',\n  },\n  margin: {\n    margin: theme.spacing(1),\n    paddingRight: 33,\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: '70ch',\n  },\n  button: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}))\n\nexport default function InputAdornments(props) {\n  const classes = useStyles()\n\n  const { access } = props\n  const [values, setValues] = React.useState({\n    password: '',\n\n    showPassword: false,\n  })\n\n  const [accessStatus, setAccessStatus] = React.useState(true)\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword })\n  }\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault()\n  }\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    setAccessStatus(true)\n  }\n\n  function handleSubmit(event) {\n    // event.preventDefault()\n    // console.log('Password: ', values.password)\n\n    // ..code to submit form to backend here...\n    axios\n      .post('/authenticate/password', values)\n      .then((response) => {\n        access(response.data)\n        setAccessStatus(response.data)\n        console.log(response.data)\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  return (\n    <>\n      <div className={classes.root}>\n        <div>\n          <FormControl\n            className={clsx(classes.margin, classes.textField)}\n            variant='outlined'\n          >\n            <InputLabel htmlFor='outlined-adornment-password'>\n              Enter your developer password here\n            </InputLabel>\n            <OutlinedInput\n              fullWidth\n              id='outlined-adornment-password'\n              type={values.showPassword ? 'text' : 'password'}\n              value={values.password}\n              onChange={handleChange('password')}\n              endAdornment={\n                <InputAdornment position='end'>\n                  <IconButton\n                    aria-label='toggle password visibility'\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                    edge='end'\n                  >\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              }\n              labelWidth={260}\n            />\n          </FormControl>\n          {/* <input type='hidden' name='password' value={values.password}></input> */}\n        </div>\n      </div>\n      <div style={{ textAlign: 'center' }} className={classes.button}>\n        <Button\n          variant='contained'\n          color='secondary'\n          className={classes.margin}\n          onClick={handleSubmit}\n          type='submit'\n        >\n          Request For Access\n        </Button>\n\n        <Snackbar\n          open={!accessStatus}\n          autoHideDuration={3000}\n          onClose={handleClose}\n        >\n          <Alert\n            onClose={handleClose}\n            severity='warning'\n            style={{ width: '100%' }}\n          >\n            Wrong Password!\n          </Alert>\n        </Snackbar>\n      </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}