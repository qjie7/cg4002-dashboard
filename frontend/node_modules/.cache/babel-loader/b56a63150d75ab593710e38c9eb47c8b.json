{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/LineChart/LineChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst LineChart = ({\n  data,\n  text,\n  label,\n  borderColor\n}) => {\n  _s();\n\n  const [lineData, setLineData] = useState({});\n  console.log(data);\n\n  const lineChart = () => {\n    setLineData({\n      labels: [],\n      datasets: [{\n        label: label,\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: '#96a3ff',\n        borderColor: borderColor,\n        borderWidth: 2,\n        data: data\n      } // {\n      //   label: 'Elbow-Kick',\n      //   fill: false,\n      //   lineTension: 0.5,\n      //   backgroundColor: '#2FDE00',\n      //   borderColor: 'rgba(233,42,23,52)',\n      //   borderWidth: 2,\n      //   data: { data },\n      // },\n      // {\n      //   label: 'Gun',\n      //   fill: false,\n      //   lineTension: 0.5,\n      //   backgroundColor: '#B21F00',\n      //   borderColor: 'rgba(233,42,111,4)',\n      //   borderWidth: 2,\n      //   data: [13, 11, 10, 96, 11],\n      // },\n      // {\n      //   label: 'Hair',\n      //   fill: false,\n      //   lineTension: 0.5,\n      //   backgroundColor: '#e630d9',\n      //   borderColor: 'rgba(90,99,77,4)',\n      //   borderWidth: 2,\n      //   data: [7, 93, 22, 77, 80],\n      // },\n      // {\n      //   label: 'Listen',\n      //   fill: false,\n      //   lineTension: 0.5,\n      //   backgroundColor: '#572985',\n      //   borderColor: 'rgba(3,42,111,4)',\n      //   borderWidth: 2,\n      //   data: [14, 29, 110, 19, 52],\n      // },\n      // {\n      //   label: 'Point-High',\n      //   fill: false,\n      //   lineTension: 0.5,\n      //   backgroundColor: '#11a3a6',\n      //   borderColor: 'rgba(150,122,11,4)',\n      //   borderWidth: 2,\n      //   data: [10, 19, 75, 28, 100],\n      // },\n      // {\n      //   label: 'Side-Pump',\n      //   fill: false,\n      //   lineTension: 0.5,\n      //   backgroundColor: '#a2bf0d',\n      //   borderColor: 'rgba(23,100,111,4)',\n      //   borderWidth: 2,\n      //   data: [13, 35, 80, 10, 19],\n      // },\n      // {\n      //   label: 'Wipe-Table',\n      //   fill: false,\n      //   lineTension: 0.5,\n      //   backgroundColor: '#c96d10',\n      //   borderColor: 'rgba(150,42,111,4)',\n      //   borderWidth: 2,\n      //   data: [70, 11, 93, 10, 36],\n      // },\n      ]\n    });\n  };\n\n  useEffect(() => {\n    lineChart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 600,\n      height: 400\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: lineData,\n      options: {\n        title: {\n          display: true,\n          text: text,\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: 'right'\n        } // scales: {\n        //   xAxes: [\n        //     {\n        //       type: 'time',\n        //     },\n        //   ],\n        // },\n\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LineChart, \"doP7FZuOup5Be2ElNVxPbFiX/Bs=\");\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/qianjie/Desktop/cg4002-dashboard/frontend/src/components/LineChart/LineChart.js"],"names":["React","useState","useEffect","Line","LineChart","data","text","label","borderColor","lineData","setLineData","console","log","lineChart","labels","datasets","fill","lineTension","backgroundColor","borderWidth","width","height","title","display","fontSize","legend","position"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA;AAArB,CAAD,KAAwC;AAAA;;AACxD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;;AAEA,QAAMQ,SAAS,GAAG,MAAM;AACtBH,IAAAA,WAAW,CAAC;AACVI,MAAAA,MAAM,EAAE,EADE;AAEVC,MAAAA,QAAQ,EAAE,CACR;AACER,QAAAA,KAAK,EAAEA,KADT;AAEES,QAAAA,IAAI,EAAE,KAFR;AAGEC,QAAAA,WAAW,EAAE,GAHf;AAIEC,QAAAA,eAAe,EAAE,SAJnB;AAKEV,QAAAA,WAAW,EAAEA,WALf;AAMEW,QAAAA,WAAW,EAAE,CANf;AAOEd,QAAAA,IAAI,EAAEA;AAPR,OADQ,CAUR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxEQ;AAFA,KAAD,CAAX;AA6ED,GA9ED;;AAgFAH,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAAZ;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,IAAI,EAAEZ,QADR;AAEE,MAAA,OAAO,EAAE;AACPa,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,IADJ;AAELjB,UAAAA,IAAI,EAAEA,IAFD;AAGLkB,UAAAA,QAAQ,EAAE;AAHL,SADA;AAMPC,QAAAA,MAAM,EAAE;AACNF,UAAAA,OAAO,EAAE,IADH;AAENG,UAAAA,QAAQ,EAAE;AAFJ,SAND,CAUP;AACA;AACA;AACA;AACA;AACA;AACA;;AAhBO;AAFX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAjHD;;GAAMtB,S;;KAAAA,S;AAmHN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Line } from 'react-chartjs-2'\n\nconst LineChart = ({ data, text, label, borderColor }) => {\n  const [lineData, setLineData] = useState({})\n  console.log(data)\n\n  const lineChart = () => {\n    setLineData({\n      labels: [],\n      datasets: [\n        {\n          label: label,\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: '#96a3ff',\n          borderColor: borderColor,\n          borderWidth: 2,\n          data: data,\n        },\n        // {\n        //   label: 'Elbow-Kick',\n        //   fill: false,\n        //   lineTension: 0.5,\n        //   backgroundColor: '#2FDE00',\n        //   borderColor: 'rgba(233,42,23,52)',\n        //   borderWidth: 2,\n        //   data: { data },\n        // },\n        // {\n        //   label: 'Gun',\n        //   fill: false,\n        //   lineTension: 0.5,\n        //   backgroundColor: '#B21F00',\n        //   borderColor: 'rgba(233,42,111,4)',\n        //   borderWidth: 2,\n        //   data: [13, 11, 10, 96, 11],\n        // },\n        // {\n        //   label: 'Hair',\n        //   fill: false,\n        //   lineTension: 0.5,\n        //   backgroundColor: '#e630d9',\n        //   borderColor: 'rgba(90,99,77,4)',\n        //   borderWidth: 2,\n        //   data: [7, 93, 22, 77, 80],\n        // },\n        // {\n        //   label: 'Listen',\n        //   fill: false,\n        //   lineTension: 0.5,\n        //   backgroundColor: '#572985',\n        //   borderColor: 'rgba(3,42,111,4)',\n        //   borderWidth: 2,\n        //   data: [14, 29, 110, 19, 52],\n        // },\n        // {\n        //   label: 'Point-High',\n        //   fill: false,\n        //   lineTension: 0.5,\n        //   backgroundColor: '#11a3a6',\n        //   borderColor: 'rgba(150,122,11,4)',\n        //   borderWidth: 2,\n        //   data: [10, 19, 75, 28, 100],\n        // },\n        // {\n        //   label: 'Side-Pump',\n        //   fill: false,\n        //   lineTension: 0.5,\n        //   backgroundColor: '#a2bf0d',\n        //   borderColor: 'rgba(23,100,111,4)',\n        //   borderWidth: 2,\n        //   data: [13, 35, 80, 10, 19],\n        // },\n        // {\n        //   label: 'Wipe-Table',\n        //   fill: false,\n        //   lineTension: 0.5,\n        //   backgroundColor: '#c96d10',\n        //   borderColor: 'rgba(150,42,111,4)',\n        //   borderWidth: 2,\n        //   data: [70, 11, 93, 10, 36],\n        // },\n      ],\n    })\n  }\n\n  useEffect(() => {\n    lineChart()\n  }, [])\n\n  return (\n    <div style={{ width: 600, height: 400 }}>\n      <Line\n        data={lineData}\n        options={{\n          title: {\n            display: true,\n            text: text,\n            fontSize: 20,\n          },\n          legend: {\n            display: true,\n            position: 'right',\n          },\n          // scales: {\n          //   xAxes: [\n          //     {\n          //       type: 'time',\n          //     },\n          //   ],\n          // },\n        }}\n      />\n    </div>\n  )\n}\n\nexport default LineChart\n"]},"metadata":{},"sourceType":"module"}